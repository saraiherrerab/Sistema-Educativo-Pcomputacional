"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/videojuego/page",{

/***/ "(app-pages-browser)/./src/app/videojuego/1stLevel.tsx":
/*!*****************************************!*\
  !*** ./src/app/videojuego/1stLevel.tsx ***!
  \*****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Nivel1: () => (/* binding */ Nivel1),\n/* harmony export */   cambioNivel: () => (/* binding */ cambioNivel)\n/* harmony export */ });\n/* harmony import */ var _MapsGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../MapsGenerator */ \"(app-pages-browser)/./src/MapsGenerator.tsx\");\n/* harmony import */ var _utils_generarNumerosAzar__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/generarNumerosAzar */ \"(app-pages-browser)/./src/utils/generarNumerosAzar.ts\");\n\n\n//import './styles.css';\nconst SCREEN_RESOLUTION_X = window.innerWidth;\nconst SCREEN_RESOLUTION_Y = window.innerHeight;\nconst TILED_MAP__WIDTH_NUMBER = 21;\nconst TILED_MAP_HEIGHT_NUMBER = 16;\nconst TILED_WIDTH = SCREEN_RESOLUTION_X / TILED_MAP__WIDTH_NUMBER;\nconst TILED_HEIGHT = SCREEN_RESOLUTION_Y / TILED_MAP_HEIGHT_NUMBER;\nlet aciertos = 0;\nlet nuevoSprite;\nlet cambioNivel = 0;\nfunction Nivel1(juegoKaplay, setState, cambiarGanar) {\n    // Referencia persistente para almacenar la instancia de Kaplay\n    // setState(false);\n    juegoKaplay.loadSprite(\"casa3\", \"sprites/buildings/House_Blue.png\", {\n        sliceX: 1,\n        sliceY: 1\n    });\n    juegoKaplay.loadSprite(\"casa2\", \"sprites/buildings/House_Destroyed.png\", {\n        sliceX: 1,\n        sliceY: 1\n    });\n    juegoKaplay.loadSprite(\"casa1\", \"sprites/buildings/House_Construction.png\", {\n        sliceX: 1,\n        sliceY: 1\n    });\n    juegoKaplay.loadSprite(\"House_Blue\", \"sprites/buildings/House_Blue.png\", {\n        sliceX: 1,\n        sliceY: 1\n    });\n    juegoKaplay.loadSprite(\"Tower_Blue\", \"sprites/buildings/Tower_Blue.png\", {\n        sliceX: 1,\n        sliceY: 1\n    });\n    juegoKaplay.loadSprite(\"pawn\", \"sprites/characters/Pawn_Purple.png\", {\n        sliceX: 6,\n        sliceY: 6,\n        anims: {\n            right: {\n                from: 18,\n                to: 23,\n                loop: false\n            },\n            quiet: {\n                from: 0,\n                to: 0,\n                loop: false\n            }\n        }\n    });\n    juegoKaplay.loadSprite(\"tree\", \"sprites/deco/Tree.png\", {\n        sliceX: 4,\n        sliceY: 3,\n        anims: {\n            bye: {\n                from: 8,\n                to: 8,\n                loop: false\n            },\n            quiet: {\n                from: 0,\n                to: 3,\n                loop: true\n            }\n        }\n    });\n    juegoKaplay.loadSprite(\"heart\", \"sprites/heart.png\", {\n        sliceX: 1,\n        sliceY: 1\n    });\n    juegoKaplay.loadSprite(\"title-0\", \"prueba/title-0.png\", {\n        sliceX: 1,\n        sliceY: 1\n    });\n    juegoKaplay.loadSprite(\"notas\", \"nivel2/notas_musicales.png\", {\n        sliceX: 3,\n        sliceY: 1\n    });\n    juegoKaplay.loadSprite(\"notas_circulo\", \"nivel2/notas_musicales_con_circulo.png\", {\n        sliceX: 3,\n        sliceY: 1\n    });\n    let semicorchea1;\n    let semicorchea2;\n    let semicorchea3;\n    juegoKaplay.loadSound(\"sonidoPrueba\", \"button_09-190435.mp3\");\n    const P1 = juegoKaplay.loadSound(\"P1\", \"./sounds/P1.mp3\");\n    juegoKaplay.loadSound(\"P2\", \"./sounds/P2.mp3\");\n    juegoKaplay.loadSound(\"P3\", \"./sounds/P3.mp3\");\n    juegoKaplay.loadSound(\"P4\", \"./sounds/P4.mp3\");\n    juegoKaplay.loadSound(\"P5\", \"./sounds/P5.mp3\");\n    juegoKaplay.loadSound(\"P6\", \"./sounds/P6.mp3\");\n    juegoKaplay.loadSound(\"A0\", \"./sounds/A0.mp3\");\n    juegoKaplay.loadSound(\"A1\", \"./sounds/A1.mp3\");\n    juegoKaplay.loadSound(\"A2\", \"./sounds/A2.mp3\");\n    juegoKaplay.loadSprite(\"redbox\", \"red-border-box.png\");\n    juegoKaplay.onLoad(async ()=>{\n        //Practicando aqui\n        const nivelPrincipal = (0,_MapsGenerator__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(juegoKaplay, {\n            nameFolder: \"nivel2\",\n            nameFile: \"prueba3.png\",\n            tileWidth: TILED_WIDTH,\n            tileHeight: TILED_HEIGHT,\n            pos: juegoKaplay.vec2(0, 0)\n        }, \"./fondomusical.json\", [\n            {\n                urlTextura: \"./nivel2/Water.png\",\n                dimensionTexturasX: 2,\n                dimensionTexturasY: 2,\n                firstgid: 1 //orden en el que tiled extrae esas imagenes (esta llega a cuatro)\n            },\n            {\n                urlTextura: \"./nivel2/Tilemap_Flat.png\",\n                dimensionTexturasX: 20,\n                dimensionTexturasY: 8,\n                firstgid: 5 //(esta comienza en 5)\n            },\n            {\n                urlTextura: \"./nivel2/Tilemap_Elevation.png\",\n                dimensionTexturasX: 8,\n                dimensionTexturasY: 16,\n                firstgid: 165\n            },\n            {\n                urlTextura: \"./nivel2/Tilemap_Flat.png\",\n                dimensionTexturasX: 20,\n                dimensionTexturasY: 8,\n                firstgid: 5 //(esta comienza en 5)\n            }\n        ]).then((resultado)=>{\n            // Jugador\n            const player = juegoKaplay.add([\n                juegoKaplay.pos(730, 5),\n                juegoKaplay.sprite(\"pawn\"),\n                juegoKaplay.scale(1),\n                juegoKaplay.health(3),\n                juegoKaplay.area(),\n                \"player\",\n                {\n                    z: 1\n                } // Asegura que el jugador esté en una capa superior\n            ]);\n            const tree = juegoKaplay.add([\n                juegoKaplay.pos(810, -5),\n                juegoKaplay.sprite(\"tree\"),\n                juegoKaplay.scale(0.8),\n                juegoKaplay.health(3),\n                juegoKaplay.area(),\n                \"tree\",\n                {\n                    z: 1\n                } // Asegura que el jugador esté en una capa superior\n            ]);\n            /* const casa = juegoKaplay.add([\r\n            juegoKaplay.pos(400,-5),\r\n            juegoKaplay.sprite(\"casa1\"),\r\n            juegoKaplay.scale(0.8),\r\n            juegoKaplay.health(3),\r\n            juegoKaplay.area(),\r\n            \"casa\",\r\n            { z: 1 } // Asegura que el jugador esté en una capa superior\r\n          ]);*/ const velocidad = 440;\n            const circle1 = juegoKaplay.add([\n                juegoKaplay.pos(juegoKaplay.center().x - juegoKaplay.center().x / 4, juegoKaplay.center().y + juegoKaplay.center().y / 2 + juegoKaplay.center().y / 6),\n                juegoKaplay.sprite(\"notas_circulo\", {\n                    frame: 0\n                }),\n                juegoKaplay.area(),\n                juegoKaplay.scale(0.20),\n                {\n                    z: 1\n                }\n            ]);\n            const circle2 = juegoKaplay.add([\n                juegoKaplay.pos(juegoKaplay.center().x, juegoKaplay.center().y + juegoKaplay.center().y / 2 + juegoKaplay.center().y / 6),\n                juegoKaplay.sprite(\"notas_circulo\", {\n                    frame: 1\n                }),\n                juegoKaplay.area(),\n                juegoKaplay.scale(0.20),\n                {\n                    z: 1\n                }\n            ]);\n            const circle3 = juegoKaplay.add([\n                juegoKaplay.pos(juegoKaplay.center().x + juegoKaplay.center().x / 4, juegoKaplay.center().y + juegoKaplay.center().y / 2 + juegoKaplay.center().y / 6),\n                juegoKaplay.sprite(\"notas_circulo\", {\n                    frame: 2\n                }),\n                juegoKaplay.area(),\n                juegoKaplay.scale(0.20),\n                {\n                    z: 1\n                }\n            ]);\n            let puntoPartida = window.innerWidth / 3;\n            let puntoPartidaY = window.innerHeight / 2;\n            //let spritecito=\"\";\n            /* function clean(spritecito: any){\r\n            juegoKaplay.destroy(spritecito);\r\n          };*/ // Array para almacenar los sprites de notas creados\n            let spritesNotas = []; // Asegúrate de usar el tipo correcto para los sprites en Kaboom.js\n            function validarAciertos() {\n                if (aciertos == 1) {\n                    const casa1 = juegoKaplay.add([\n                        juegoKaplay.pos(400, -5),\n                        juegoKaplay.sprite(\"casa1\"),\n                        juegoKaplay.scale(0.8),\n                        juegoKaplay.health(3),\n                        juegoKaplay.area(),\n                        \"casa\",\n                        {\n                            z: 1\n                        } // Asegura que el jugador esté en una capa superior\n                    ]);\n                    console.log(\"El mensaje es: \" + aciertos);\n                    cambiarGanar(true);\n                    setState(true);\n                    setTimeout(()=>{\n                        setState(false);\n                    }, 2000);\n                    ultimo = patronesdinamicos();\n                } else if (aciertos == 2) {\n                    const casa2 = juegoKaplay.add([\n                        juegoKaplay.pos(400, -5),\n                        juegoKaplay.sprite(\"casa2\"),\n                        juegoKaplay.scale(0.8),\n                        juegoKaplay.health(3),\n                        juegoKaplay.area(),\n                        \"casa\",\n                        {\n                            z: 1\n                        } // Asegura que el jugador esté en una capa superior\n                    ]);\n                    console.log(\"El mensaje es: \" + aciertos);\n                    setState(true);\n                    cambiarGanar(true);\n                    setTimeout(()=>{\n                        setState(false);\n                    }, 2000);\n                    ultimo = patronesdinamicos();\n                } else if (aciertos == 3) {\n                    const casa3 = juegoKaplay.add([\n                        juegoKaplay.pos(400, -5),\n                        juegoKaplay.sprite(\"casa3\"),\n                        juegoKaplay.scale(0.8),\n                        juegoKaplay.health(3),\n                        juegoKaplay.area(),\n                        \"casa\",\n                        {\n                            z: 1\n                        } // Asegura que el jugador esté en una capa superior\n                    ]);\n                    console.log(\"El mensaje es: \" + aciertos);\n                    //patronesdinamicos().clear;\n                    setState(true);\n                    cambiarGanar(true);\n                    setTimeout(()=>{\n                        setState(false);\n                    }, 2000);\n                    ultimo = patronesdinamicos();\n                }\n            }\n            ;\n            function limpiarNotas() {\n                spritesNotas = juegoKaplay.get(\"notas\");\n                console.log(spritesNotas);\n                spritesNotas.forEach((spritesNotas)=>{\n                    spritesNotas.destroy();\n                });\n                puntoPartida = window.innerWidth / 3;\n                puntoPartidaY = window.innerHeight / 2;\n            }\n            function patronesdinamicos() {\n                // Limpia los sprites de notas anteriores\n                limpiarNotas();\n                const patrones = [\n                    [\n                        0,\n                        1,\n                        2,\n                        0,\n                        1,\n                        2,\n                        0,\n                        1,\n                        2\n                    ],\n                    [\n                        0,\n                        2,\n                        0,\n                        2,\n                        0,\n                        2,\n                        0,\n                        2,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        1,\n                        1,\n                        1,\n                        2,\n                        2,\n                        2\n                    ],\n                    [\n                        1,\n                        2,\n                        0,\n                        1,\n                        2,\n                        0,\n                        1,\n                        2,\n                        0\n                    ],\n                    [\n                        2,\n                        1,\n                        0,\n                        2,\n                        1,\n                        0,\n                        2,\n                        1,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        1,\n                        1,\n                        0,\n                        0,\n                        1,\n                        1,\n                        0\n                    ]\n                ];\n                let delay = 500; // Inicializar el retraso\n                const numeros = (0,_utils_generarNumerosAzar__WEBPACK_IMPORTED_MODULE_1__[\"default\"])();\n                console.log(numeros);\n                console.log(patrones[numeros[0]]);\n                const ultimo = patrones[numeros[0]][patrones[numeros[0]].length - 1];\n                patrones[numeros[0]] = patrones[numeros[0]].slice(0, -1);\n                // Iterar sobre el patrón seleccionado\n                patrones[numeros[0]].forEach((numeroAzar)=>{\n                    setTimeout(()=>{\n                        switch(numeroAzar){\n                            case 0:\n                                nuevoSprite = juegoKaplay.add([\n                                    juegoKaplay.pos(puntoPartida, juegoKaplay.center().y / 2 + puntoPartidaY),\n                                    juegoKaplay.sprite(\"notas\"),\n                                    juegoKaplay.scale(0.1),\n                                    {\n                                        z: 2\n                                    },\n                                    \"notas\"\n                                ]);\n                                nuevoSprite.frame = 1;\n                                puntoPartida += 70;\n                                juegoKaplay.play(\"A0\", {\n                                    volume: 1,\n                                    speed: 1.5,\n                                    loop: false\n                                });\n                                break;\n                            case 1:\n                                nuevoSprite = juegoKaplay.add([\n                                    juegoKaplay.pos(puntoPartida, juegoKaplay.center().y / 2 + puntoPartidaY),\n                                    juegoKaplay.sprite(\"notas\"),\n                                    juegoKaplay.scale(0.1),\n                                    {\n                                        z: 2\n                                    },\n                                    \"notas\"\n                                ]);\n                                nuevoSprite.frame = 0;\n                                puntoPartida += 70;\n                                juegoKaplay.play(\"A1\", {\n                                    volume: 1,\n                                    speed: 1.5,\n                                    loop: false\n                                });\n                                break;\n                            case 2:\n                                nuevoSprite = juegoKaplay.add([\n                                    juegoKaplay.pos(puntoPartida, juegoKaplay.center().y / 2 + puntoPartidaY),\n                                    juegoKaplay.sprite(\"notas\"),\n                                    juegoKaplay.scale(0.1),\n                                    {\n                                        z: 2\n                                    },\n                                    \"notas\"\n                                ]);\n                                nuevoSprite.frame = 2;\n                                puntoPartida += 70;\n                                juegoKaplay.play(\"A2\", {\n                                    volume: 1,\n                                    speed: 1.5,\n                                    loop: false\n                                });\n                                break;\n                        }\n                        // Agrega el sprite al array para rastrear todos los sprites creados\n                        if (nuevoSprite) {\n                            spritesNotas.push(nuevoSprite);\n                        }\n                    }, delay);\n                    delay += 1000; // Incrementar el retraso para el siguiente sprite\n                });\n                return ultimo; // Retorna el último valor del patrón\n            }\n            let ultimo = patronesdinamicos();\n            circle1.onClick(()=>{\n                juegoKaplay.play(\"A0\", {\n                    volume: 1,\n                    speed: 1.5,\n                    loop: false\n                });\n                if (ultimo == 0) {\n                    player.play(\"right\");\n                    tree.play(\"bye\");\n                    aciertos++;\n                    validarAciertos();\n                } else {\n                    console.log(\"Fallaste\" + ultimo);\n                    setState(true);\n                    cambiarGanar(false);\n                    setTimeout(()=>{\n                        setState(false);\n                    }, 2000);\n                }\n            });\n            circle2.onClick(()=>{\n                juegoKaplay.play(\"A1\", {\n                    volume: 1,\n                    speed: 1.5,\n                    loop: false\n                });\n                if (ultimo == 1) {\n                    player.play(\"right\");\n                    tree.play(\"bye\");\n                    aciertos++;\n                    validarAciertos();\n                //console.log(\"El mensaje es: \" + aciertos);\n                } else {\n                    console.log(\"Fallaste\" + ultimo);\n                    setState(true);\n                    cambiarGanar(false);\n                    setTimeout(()=>{\n                        setState(false);\n                    }, 2000);\n                }\n            });\n            circle3.onClick(()=>{\n                juegoKaplay.play(\"A2\", {\n                    volume: 1,\n                    speed: 1.5,\n                    loop: false\n                });\n                if (ultimo == 2) {\n                    player.play(\"right\");\n                    tree.play(\"bye\");\n                    aciertos++;\n                    validarAciertos();\n                //console.log(\"El mensaje es: \" + aciertos);\n                } else {\n                    console.log(\"Fallaste\" + ultimo);\n                    setState(true);\n                    cambiarGanar(false);\n                    setTimeout(()=>{\n                        setState(false);\n                    }, 2000);\n                }\n            });\n            player.onDeath(()=>{\n                juegoKaplay.destroy(player);\n            });\n        }).catch((error)=>{\n            console.log(\"lerolerolero\");\n        });\n    }) //Fin - Onload()\n    ;\n} //return <canvas id=\"game\" style={{ width: \"100vw\", height: \"100vh\" }} />;;\n_c = Nivel1;\nvar _c;\n$RefreshReg$(_c, \"Nivel1\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvdmlkZW9qdWVnby8xc3RMZXZlbC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUNxRDtBQUNXO0FBRWhFLHdCQUF3QjtBQUl4QixNQUFNRSxzQkFBOEJDLE9BQU9DLFVBQVU7QUFDckQsTUFBTUMsc0JBQThCRixPQUFPRyxXQUFXO0FBQ3RELE1BQU1DLDBCQUFrQztBQUN4QyxNQUFNQywwQkFBa0M7QUFDeEMsTUFBTUMsY0FBc0JQLHNCQUFzQks7QUFDbEQsTUFBTUcsZUFBdUJMLHNCQUFzQkc7QUFDbkQsSUFBSUcsV0FBVztBQUNmLElBQUlDO0FBQ0csSUFBSUMsY0FBYyxFQUFFO0FBS3BCLFNBQVNDLE9BQU9DLFdBQStCLEVBQUVDLFFBQVksRUFBRUMsWUFBZ0I7SUFDbEYsK0RBQStEO0lBQ2hFLG1CQUFtQjtJQUNsQkYsWUFBWUcsVUFBVSxDQUFDLFNBQVMsb0NBQW9DO1FBQ2xFQyxRQUFRO1FBQ1JDLFFBQVE7SUFDVjtJQUVBTCxZQUFZRyxVQUFVLENBQUMsU0FBUyx5Q0FBeUM7UUFDdkVDLFFBQVE7UUFDUkMsUUFBUTtJQUNWO0lBRUFMLFlBQVlHLFVBQVUsQ0FBQyxTQUFTLDRDQUE0QztRQUMxRUMsUUFBUTtRQUNSQyxRQUFRO0lBQ1Y7SUFFQUwsWUFBWUcsVUFBVSxDQUFDLGNBQWMsb0NBQW9DO1FBQ3ZFQyxRQUFRO1FBQ1JDLFFBQVE7SUFDVjtJQUVBTCxZQUFZRyxVQUFVLENBQUMsY0FBYyxvQ0FBb0M7UUFDdkVDLFFBQVE7UUFDUkMsUUFBUTtJQUNWO0lBRUFMLFlBQVlHLFVBQVUsQ0FBQyxRQUFRLHNDQUFzQztRQUNuRUMsUUFBUTtRQUNSQyxRQUFRO1FBQ1JDLE9BQU87WUFDTEMsT0FBTztnQkFBRUMsTUFBTTtnQkFBSUMsSUFBSTtnQkFBSUMsTUFBTTtZQUFNO1lBQ3ZDQyxPQUFPO2dCQUFFSCxNQUFNO2dCQUFHQyxJQUFJO2dCQUFHQyxNQUFNO1lBQU07UUFDdkM7SUFDRjtJQUVBVixZQUFZ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K0IsT0FBTzJDLE9BQU8sQ0FBQztnQkFDYjNFLFlBQVkrRCxPQUFPLENBQUMvQjtZQUN0QjtRQUlGLEdBR0k0QyxLQUFLLENBQ0osQ0FBQ0M7WUFDQXhCLFFBQVFDLEdBQUcsQ0FBQztRQUNkO0lBSUosR0FBRyxnQkFBZ0I7O0FBRzNCLEVBRUksMkVBQTJFO0tBbGUvRHZEIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXFdJTkRPV1MgMTFcXERvY3VtZW50c1xcU2lzdGVtYS1FZHVjYXRpdm8tUGNvbXB1dGFjaW9uYWxcXEZyb250ZW5kXFxTaXN0ZW1hLUVkdWNhdGl2by1QY29tcHV0YWNpb25hbFxcc3JjXFxhcHBcXHZpZGVvanVlZ29cXDFzdExldmVsLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0dhbWVPYmosIEtBUExBWUN0eH0gZnJvbSBcImthcGxheVwiO1xyXG5pbXBvcnQgZ2VuZXJhckVzcXVlbWFNYXBhIGZyb20gXCIuLi8uLi9NYXBzR2VuZXJhdG9yXCI7XHJcbmltcG9ydCBnZW5lcmFyTnVtZXJvc0F6YXIgZnJvbSBcIi4uLy4uL3V0aWxzL2dlbmVyYXJOdW1lcm9zQXphclwiO1xyXG5pbXBvcnQgeyB1c2VFZmZlY3QsIHVzZVJlZiwgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcclxuLy9pbXBvcnQgJy4vc3R5bGVzLmNzcyc7XHJcblxyXG5cclxuXHJcbmNvbnN0IFNDUkVFTl9SRVNPTFVUSU9OX1g6IG51bWJlciA9IHdpbmRvdy5pbm5lcldpZHRoIFxyXG5jb25zdCBTQ1JFRU5fUkVTT0xVVElPTl9ZOiBudW1iZXIgPSB3aW5kb3cuaW5uZXJIZWlnaHQgXHJcbmNvbnN0IFRJTEVEX01BUF9fV0lEVEhfTlVNQkVSOiBudW1iZXIgPSAyMVxyXG5jb25zdCBUSUxFRF9NQVBfSEVJR0hUX05VTUJFUjogbnVtYmVyID0gMTZcclxuY29uc3QgVElMRURfV0lEVEg6IG51bWJlciA9IFNDUkVFTl9SRVNPTFVUSU9OX1ggLyBUSUxFRF9NQVBfX1dJRFRIX05VTUJFUlxyXG5jb25zdCBUSUxFRF9IRUlHSFQ6IG51bWJlciA9IFNDUkVFTl9SRVNPTFVUSU9OX1kgLyBUSUxFRF9NQVBfSEVJR0hUX05VTUJFUlxyXG5sZXQgYWNpZXJ0b3MgPSAwO1xyXG5sZXQgbnVldm9TcHJpdGU6IEdhbWVPYmo7XHJcbmV4cG9ydCBsZXQgY2FtYmlvTml2ZWwgPSAwO1xyXG5cclxuXHJcblxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIE5pdmVsMShqdWVnb0thcGxheTpLQVBMQVlDdHg8e30sbmV2ZXI+LCBzZXRTdGF0ZTphbnksIGNhbWJpYXJHYW5hcjphbnkpIHtcclxuICAgIC8vIFJlZmVyZW5jaWEgcGVyc2lzdGVudGUgcGFyYSBhbG1hY2VuYXIgbGEgaW5zdGFuY2lhIGRlIEthcGxheVxyXG4gICAvLyBzZXRTdGF0ZShmYWxzZSk7XHJcbiAgICBqdWVnb0thcGxheS5sb2FkU3ByaXRlKFwiY2FzYTNcIiwgXCJzcHJpdGVzL2J1aWxkaW5ncy9Ib3VzZV9CbHVlLnBuZ1wiLCB7XHJcbiAgICAgIHNsaWNlWDogMSxcclxuICAgICAgc2xpY2VZOiAxLFxyXG4gICAgfSk7XHJcblxyXG4gICAganVlZ29LYXBsYXkubG9hZFNwcml0ZShcImNhc2EyXCIsIFwic3ByaXRlcy9idWlsZGluZ3MvSG91c2VfRGVzdHJveWVkLnBuZ1wiLCB7XHJcbiAgICAgIHNsaWNlWDogMSxcclxuICAgICAgc2xpY2VZOiAxLFxyXG4gICAgfSk7XHJcblxyXG4gICAganVlZ29LYXBsYXkubG9hZFNwcml0ZShcImNhc2ExXCIsIFwic3ByaXRlcy9idWlsZGluZ3MvSG91c2VfQ29uc3RydWN0aW9uLnBuZ1wiLCB7XHJcbiAgICAgIHNsaWNlWDogMSxcclxuICAgICAgc2xpY2VZOiAxLFxyXG4gICAgfSk7XHJcblxyXG4gICAganVlZ29LYXBsYXkubG9hZFNwcml0ZShcIkhvdXNlX0JsdWVcIiwgXCJzcHJpdGVzL2J1aWxkaW5ncy9Ib3VzZV9CbHVlLnBuZ1wiLCB7XHJcbiAgICAgIHNsaWNlWDogMSxcclxuICAgICAgc2xpY2VZOiAxLFxyXG4gICAgfSk7XHJcblxyXG4gICAganVlZ29LYXBsYXkubG9hZFNwcml0ZShcIlRvd2VyX0JsdWVcIiwgXCJzcHJpdGVzL2J1aWxkaW5ncy9Ub3dlcl9CbHVlLnBuZ1wiLCB7XHJcbiAgICAgIHNsaWNlWDogMSxcclxuICAgICAgc2xpY2VZOiAxLFxyXG4gICAgfSk7XHJcbiAgXHJcbiAgICBqdWVnb0thcGxheS5sb2FkU3ByaXRlKFwicGF3blwiLCBcInNwcml0ZXMvY2hhcmFjdGVycy9QYXduX1B1cnBsZS5wbmdcIiwge1xyXG4gICAgICBzbGljZVg6IDYsXHJcbiAgICAgIHNsaWNlWTogNixcclxuICAgICAgYW5pbXM6IHtcclxuICAgICAgICByaWdodDogeyBmcm9tOiAxOCwgdG86IDIzLCBsb29wOiBmYWxzZSB9LFxyXG4gICAgICAgIHF1aWV0OiB7IGZyb206IDAsIHRvOiAwLCBsb29wOiBmYWxzZSB9LFxyXG4gICAgICB9LFxyXG4gICAgfSk7XHJcblxyXG4gICAganVlZ29LYXBsYXkubG9hZFNwcml0ZShcInRyZWVcIiwgXCJzcHJpdGVzL2RlY28vVHJlZS5wbmdcIiwge1xyXG4gICAgICBzbGljZVg6IDQsXHJcbiAgICAgIHNsaWNlWTogMyxcclxuICAgICAgYW5pbXM6IHtcclxuICAgICAgICBieWU6IHsgZnJvbTogOCwgdG86IDgsIGxvb3A6IGZhbHNlIH0sXHJcbiAgICAgICAgcXVpZXQ6IHsgZnJvbTogMCwgdG86IDMsIGxvb3A6IHRydWUgfSxcclxuICAgICAgfSxcclxuICAgIH0pO1xyXG4gIFxyXG5cclxuXHJcblxyXG5cclxuICAgIGp1ZWdvS2FwbGF5LmxvYWRTcHJpdGUoXCJoZWFydFwiLCBcInNwcml0ZXMvaGVhcnQucG5nXCIsIHtcclxuICAgICAgc2xpY2VYOiAxLFxyXG4gICAgICBzbGljZVk6IDEsXHJcbiAgICB9KTtcclxuXHJcbiAgICBqdWVnb0thcGxheS5sb2FkU3ByaXRlKFwidGl0bGUtMFwiLCBcInBydWViYS90aXRsZS0wLnBuZ1wiLCB7XHJcbiAgICAgIHNsaWNlWDogMSxcclxuICAgICAgc2xpY2VZOiAxLFxyXG4gICAgfSk7XHJcblxyXG4gICAganVlZ29LYXBsYXkubG9hZFNwcml0ZShcIm5vdGFzXCIsIFwibml2ZWwyL25vdGFzX211c2ljYWxlcy5wbmdcIiwge1xyXG4gICAgICBzbGljZVg6IDMsXHJcbiAgICAgIHNsaWNlWTogMVxyXG4gICAgfSk7XHJcbiAgXHJcbiAgICBqdWVnb0thcGxheS5sb2FkU3ByaXRlKFwibm90YXNfY2lyY3Vsb1wiLCBcIm5pdmVsMi9ub3Rhc19tdXNpY2FsZXNfY29uX2NpcmN1bG8ucG5nXCIsIHtcclxuICAgICAgc2xpY2VYOiAzLFxyXG4gICAgICBzbGljZVk6IDFcclxuICAgIH0pO1xyXG5cclxuICAgIGxldCBzZW1pY29yY2hlYTE6IEdhbWVPYmo7XHJcbiAgICBsZXQgc2VtaWNvcmNoZWEyOiBHYW1lT2JqO1xyXG4gICAgbGV0IHNlbWljb3JjaGVhMzpHYW1lT2JqO1xyXG5cclxuIFxyXG5cclxuICAgIGp1ZWdvS2FwbGF5LmxvYWRTb3VuZChcInNvbmlkb1BydWViYVwiLCBcImJ1dHRvbl8wOS0xOTA0MzUubXAzXCIpO1xyXG4gICAgY29uc3QgUDE9IGp1ZWdvS2FwbGF5LmxvYWRTb3VuZChcIlAxXCIsIFwiLi9zb3VuZHMvUDEubXAzXCIpO1xyXG4gICAganVlZ29LYXBsYXkubG9hZFNvdW5kKFwiUDJcIiwgXCIuL3NvdW5kcy9QMi5tcDNcIik7XHJcbiAgICBqdWVnb0thcGxheS5sb2FkU291bmQoXCJQM1wiLCBcIi4vc291bmRzL1AzLm1wM1wiKTtcclxuICAgIGp1ZWdvS2FwbGF5LmxvYWRTb3VuZChcIlA0XCIsIFwiLi9zb3VuZHMvUDQubXAzXCIpO1xyXG4gICAganVlZ29LYXBsYXkubG9hZFNvdW5kKFwiUDVcIiwgXCIuL3NvdW5kcy9QNS5tcDNcIik7XHJcbiAgICBqdWVnb0thcGxheS5sb2FkU291bmQoXCJQNlwiLCBcIi4vc291bmRzL1A2Lm1wM1wiKTtcclxuICAgIGp1ZWdvS2FwbGF5LmxvYWRTb3VuZChcIkEwXCIsIFwiLi9zb3VuZHMvQTAubXAzXCIpO1xyXG4gICAganVlZ29LYXBsYXkubG9hZFNvdW5kKFwiQTFcIiwgXCIuL3NvdW5kcy9BMS5tcDNcIik7XHJcbiAgICBqdWVnb0thcGxheS5sb2FkU291bmQoXCJBMlwiLCBcIi4vc291bmRzL0EyLm1wM1wiKTtcclxuICBcclxuICAgICAgICBcclxuICAgICAgICBcclxuICBcclxuXHJcbiAgICBqdWVnb0thcGxheS5sb2FkU3ByaXRlKFwicmVkYm94XCIsIFwicmVkLWJvcmRlci1ib3gucG5nXCIpO1xyXG4gICAgICAgIFxyXG4gIFxyXG4gICAganVlZ29LYXBsYXkub25Mb2FkKGFzeW5jICgpID0+IHtcclxuICAgICAgICAvL1ByYWN0aWNhbmRvIGFxdWlcclxuXHJcblxyXG4gICAgICBjb25zdCBuaXZlbFByaW5jaXBhbCA9IGdlbmVyYXJFc3F1ZW1hTWFwYShcclxuICAgICAgICBqdWVnb0thcGxheSxcclxuICAgICAgICB7XHJcbiAgICAgICAgICBuYW1lRm9sZGVyOiBcIm5pdmVsMlwiLFxyXG4gICAgICAgICAgbmFtZUZpbGU6IFwicHJ1ZWJhMy5wbmdcIixcclxuICAgICAgICAgIHRpbGVXaWR0aDogVElMRURfV0lEVEgsXHJcbiAgICAgICAgICB0aWxlSGVpZ2h0OiBUSUxFRF9IRUlHSFQsXHJcbiAgICAgICAgICBwb3M6IGp1ZWdvS2FwbGF5LnZlYzIoMCwgMCksXHJcbiAgICAgICAgfSxcclxuICAgICAgICBgLi9mb25kb211c2ljYWwuanNvbmAsICAgLy9hcmNoaXZvIGRlIGRvbmRlIHZveSBhIGV4dHJhZXIgZWwgbWFwYVxyXG4gICAgICAgIFxyXG4gICAgICAgIFsgLy9BY2EgbG8gaW1wb3J0YW50ZSBlcyBxdWUgZGVibyBpbnRyb2R1Y2lyIGVsIG9yZGVuIGRlIGxhcyB0ZXh0dXJhcyBlbiBlbCBxdWUgdmEsIGNhcGEgcG9yIGNhcGFcclxuICAgICAgICAgIHtcclxuICAgICAgICAgICAgdXJsVGV4dHVyYTogXCIuL25pdmVsMi9XYXRlci5wbmdcIiwgIFxyXG4gICAgICAgICAgICBkaW1lbnNpb25UZXh0dXJhc1g6IDIsIC8vRGltZW5zaW9uZXMgZGUgdGlsZWRcclxuICAgICAgICAgICAgZGltZW5zaW9uVGV4dHVyYXNZOiAyLFxyXG4gICAgICAgICAgICBmaXJzdGdpZDogMSAvL29yZGVuIGVuIGVsIHF1ZSB0aWxlZCBleHRyYWUgZXNhcyBpbWFnZW5lcyAoZXN0YSBsbGVnYSBhIGN1YXRybylcclxuICAgICAgICAgIH0sIFxyXG4gICAgICAgICAge1xyXG4gICAgICAgICAgICB1cmxUZXh0dXJhOiBcIi4vbml2ZWwyL1RpbGVtYXBfRmxhdC5wbmdcIixcclxuICAgICAgICAgICAgZGltZW5zaW9uVGV4dHVyYXNYOiAyMCxcclxuICAgICAgICAgICAgZGltZW5zaW9uVGV4dHVyYXNZOiA4LFxyXG4gICAgICAgICAgICBmaXJzdGdpZDogNSAvLyhlc3RhIGNvbWllbnphIGVuIDUpXHJcbiAgICAgICAgICB9LCAgICAgICAgXHJcbiAgICAgICAgICB7dXJsVGV4dHVyYTogXCIuL25pdmVsMi9UaWxlbWFwX0VsZXZhdGlvbi5wbmdcIixcclxuICAgICAgICAgIGRpbWVuc2lvblRleHR1cmFzWDogOCxcclxuICAgICAgICAgIGRpbWVuc2lvblRleHR1cmFzWTogMTYsXHJcbiAgICAgICAgICBmaXJzdGdpZDogMTY1XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgdXJsVGV4dHVyYTogXCIuL25pdmVsMi9UaWxlbWFwX0ZsYXQucG5nXCIsXHJcbiAgICAgICAgICAgIGRpbWVuc2lvblRleHR1cmFzWDogMjAsXHJcbiAgICAgICAgICAgIGRpbWVuc2lvblRleHR1cmFzWTogOCxcclxuICAgICAgICAgICAgZmlyc3RnaWQ6IDUgLy8oZXN0YSBjb21pZW56YSBlbiA1KVxyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICBcclxuICBcclxuICAgICAgICBdXHJcbiAgICAgIClcclxuICAgICAgLnRoZW4oXHJcbiAgICAgICAgKHJlc3VsdGFkbzogYW55KSA9PiB7XHJcbiAgICAgICAgXHJcbiAgICAgICAgICAvLyBKdWdhZG9yXHJcbiAgICAgICAgICBjb25zdCBwbGF5ZXIgPSBqdWVnb0thcGxheS5hZGQoW1xyXG4gICAgICAgICAgICBqdWVnb0thcGxheS5wb3MoNzMwLCA1KSxcclxuICAgICAgICAgICAganVlZ29LYXBsYXkuc3ByaXRlKFwicGF3blwiKSxcclxuICAgICAgICAgICAganVlZ29LYXBsYXkuc2NhbGUoMSksXHJcbiAgICAgICAgICAgIGp1ZWdvS2FwbGF5LmhlYWx0aCgzKSxcclxuICAgICAgICAgICAganVlZ29LYXBsYXkuYXJlYSgpLFxyXG4gICAgICAgICAgICBcInBsYXllclwiLFxyXG4gICAgICAgICAgICB7IHo6IDEgfSAvLyBBc2VndXJhIHF1ZSBlbCBqdWdhZG9yIGVzdMOpIGVuIHVuYSBjYXBhIHN1cGVyaW9yXHJcbiAgICAgICAgICBdKTtcclxuXHJcbiAgICAgICAgICBjb25zdCB0cmVlID0ganVlZ29LYXBsYXkuYWRkKFtcclxuICAgICAgICAgICAganVlZ29LYXBsYXkucG9zKDgxMCwtNSksXHJcbiAgICAgICAgICAgIGp1ZWdvS2FwbGF5LnNwcml0ZShcInRyZWVcIiksXHJcbiAgICAgICAgICAgIGp1ZWdvS2FwbGF5LnNjYWxlKDAuOCksXHJcbiAgICAgICAgICAgIGp1ZWdvS2FwbGF5LmhlYWx0aCgzKSxcclxuICAgICAgICAgICAganVlZ29LYXBsYXkuYXJlYSgpLFxyXG4gICAgICAgICAgICBcInRyZWVcIixcclxuICAgICAgICAgICAgeyB6OiAxIH0gLy8gQXNlZ3VyYSBxdWUgZWwganVnYWRvciBlc3TDqSBlbiB1bmEgY2FwYSBzdXBlcmlvclxyXG4gICAgICAgICAgXSk7XHJcbiAgICAgICAgICBcclxuXHJcbiAgICAgICAgIC8qIGNvbnN0IGNhc2EgPSBqdWVnb0thcGxheS5hZGQoW1xyXG4gICAgICAgICAgICBqdWVnb0thcGxheS5wb3MoNDAwLC01KSxcclxuICAgICAgICAgICAganVlZ29LYXBsYXkuc3ByaXRlKFwiY2FzYTFcIiksXHJcbiAgICAgICAgICAgIGp1ZWdvS2FwbGF5LnNjYWxlKDAuOCksXHJcbiAgICAgICAgICAgIGp1ZWdvS2FwbGF5LmhlYWx0aCgzKSxcclxuICAgICAgICAgICAganVlZ29LYXBsYXkuYXJlYSgpLFxyXG4gICAgICAgICAgICBcImNhc2FcIixcclxuICAgICAgICAgICAgeyB6OiAxIH0gLy8gQXNlZ3VyYSBxdWUgZWwganVnYWRvciBlc3TDqSBlbiB1bmEgY2FwYSBzdXBlcmlvclxyXG4gICAgICAgICAgXSk7Ki9cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuICAgICAgICAgIGNvbnN0IHZlbG9jaWRhZCA9IDQ0MDtcclxuXHJcblxyXG5cclxuXHJcblxyXG4gICAgICAgICAgY29uc3QgY2lyY2xlMSA9IGp1ZWdvS2FwbGF5LmFkZChbXHJcbiAgICAgICAgICBqdWVnb0thcGxheS5wb3MoanVlZ29LYXBsYXkuY2VudGVyKCkueCAtIGp1ZWdvS2FwbGF5LmNlbnRlcigpLnggLyA0LCBqdWVnb0thcGxheS5jZW50ZXIoKS55ICsganVlZ29LYXBsYXkuY2VudGVyKCkueSAvIDIgKyBqdWVnb0thcGxheS5jZW50ZXIoKS55IC8gNiksXHJcbiAgICAgICAgICBqdWVnb0thcGxheS5zcHJpdGUoXCJub3Rhc19jaXJjdWxvXCIsIHtmcmFtZTogMH0pLFxyXG4gICAgICAgICAganVlZ29LYXBsYXkuYXJlYSgpLFxyXG4gICAgICAgICAganVlZ29LYXBsYXkuc2NhbGUoMC4yMCksXHJcbiAgICAgICAgICB7IHo6IDF9LC8vIEFzZWd1cmEgcXVlIGVsIGp1Z2Fkb3IgZXN0w6kgZW4gdW5hIGNhcGEgc3VwZXJpb3IsXHJcbiAgICAgICAgICBdKVxyXG5cclxuICAgICAgICAgIGNvbnN0IGNpcmNsZTIgPSBqdWVnb0thcGxheS5hZGQoW1xyXG4gICAgICAgICAganVlZ29LYXBsYXkucG9zKGp1ZWdvS2FwbGF5LmNlbnRlcigpLngsIGp1ZWdvS2FwbGF5LmNlbnRlcigpLnkgKyBqdWVnb0thcGxheS5jZW50ZXIoKS55IC8gMiArIGp1ZWdvS2FwbGF5LmNlbnRlcigpLnkgLyA2KSxcclxuICAgICAgICAgIGp1ZWdvS2FwbGF5LnNwcml0ZShcIm5vdGFzX2NpcmN1bG9cIiwge2ZyYW1lOiAxfSksXHJcbiAgICAgICAgICBqdWVnb0thcGxheS5hcmVhKCksXHJcbiAgICAgICAgICBqdWVnb0thcGxheS5zY2FsZSgwLjIwKSxcclxuICAgICAgICAgIHsgejogMX0sLy8gQXNlZ3VyYSBxdWUgZWwganVnYWRvciBlc3TDqSBlbiB1bmEgY2FwYSBzdXBlcmlvcixcclxuICAgICAgICAgIF0pXHJcblxyXG4gICAgICAgICAgY29uc3QgY2lyY2xlMyA9IGp1ZWdvS2FwbGF5LmFkZChbXHJcbiAgICAgICAgICBqdWVnb0thcGxheS5wb3MoanVlZ29LYXBsYXkuY2VudGVyKCkueCArIGp1ZWdvS2FwbGF5LmNlbnRlcigpLnggLyA0LCBqdWVnb0thcGxheS5jZW50ZXIoKS55ICsganVlZ29LYXBsYXkuY2VudGVyKCkueSAvIDIgKyBqdWVnb0thcGxheS5jZW50ZXIoKS55IC8gNiksXHJcbiAgICAgICAgICBqdWVnb0thcGxheS5zcHJpdGUoXCJub3Rhc19jaXJjdWxvXCIsIHtmcmFtZTogMn0pLFxyXG4gICAgICAgICAganVlZ29LYXBsYXkuYXJlYSgpLFxyXG4gICAgICAgICAganVlZ29LYXBsYXkuc2NhbGUoMC4yMCksXHJcbiAgICAgICAgICB7IHo6IDF9LC8vIEFzZWd1cmEgcXVlIGVsIGp1Z2Fkb3IgZXN0w6kgZW4gdW5hIGNhcGEgc3VwZXJpb3IsXHJcbiAgICAgICAgICBdKVxyXG5cclxuICAgICAgICBsZXQgcHVudG9QYXJ0aWRhOiBudW1iZXIgPSB3aW5kb3cuaW5uZXJXaWR0aC8zXHJcbiAgICAgICAgbGV0IHB1bnRvUGFydGlkYVk6bnVtYmVyID0gd2luZG93LmlubmVySGVpZ2h0LzJcclxuICAgICAgICAvL2xldCBzcHJpdGVjaXRvPVwiXCI7XHJcblxyXG4gICAgICAgICAvKiBmdW5jdGlvbiBjbGVhbihzcHJpdGVjaXRvOiBhbnkpe1xyXG4gICAgICAgICAgICBqdWVnb0thcGxheS5kZXN0cm95KHNwcml0ZWNpdG8pO1xyXG4gICAgICAgICAgfTsqL1xyXG5cclxuLy8gQXJyYXkgcGFyYSBhbG1hY2VuYXIgbG9zIHNwcml0ZXMgZGUgbm90YXMgY3JlYWRvc1xyXG4gIGxldCBzcHJpdGVzTm90YXM6IEdhbWVPYmpbXSA9IFtdOyAvLyBBc2Vnw7pyYXRlIGRlIHVzYXIgZWwgdGlwbyBjb3JyZWN0byBwYXJhIGxvcyBzcHJpdGVzIGVuIEthYm9vbS5qc1xyXG5cclxuICBmdW5jdGlvbiB2YWxpZGFyQWNpZXJ0b3MoKXtcclxuICAgIGlmKGFjaWVydG9zPT0xKXtcclxuICAgICAgICAgICAgICBcclxuICAgICAgY29uc3QgY2FzYTEgPSBqdWVnb0thcGxheS5hZGQoW1xyXG4gICAgICAgIGp1ZWdvS2FwbGF5LnBvcyg0MDAsLTUpLFxyXG4gICAgICAgIGp1ZWdvS2FwbGF5LnNwcml0ZShcImNhc2ExXCIpLFxyXG4gICAgICAgIGp1ZWdvS2FwbGF5LnNjYWxlKDAuOCksXHJcbiAgICAgICAganVlZ29LYXBsYXkuaGVhbHRoKDMpLFxyXG4gICAgICAgIGp1ZWdvS2FwbGF5LmFyZWEoKSxcclxuICAgICAgICBcImNhc2FcIixcclxuICAgICAgICB7IHo6IDEgfSAvLyBBc2VndXJhIHF1ZSBlbCBqdWdhZG9yIGVzdMOpIGVuIHVuYSBjYXBhIHN1cGVyaW9yXHJcbiAgICAgIF0pO1xyXG4gICAgICBjb25zb2xlLmxvZyhcIkVsIG1lbnNhamUgZXM6IFwiICsgYWNpZXJ0b3MpO1xyXG4gICAgICBjYW1iaWFyR2FuYXIodHJ1ZSk7XHJcbiAgICAgIHNldFN0YXRlKHRydWUpO1xyXG4gICAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICBzZXRTdGF0ZShmYWxzZSk7XHJcbiAgICAgIH0sIDIwMDApOyBcclxuICAgICAgXHJcbiAgICAgXHJcbiAgICAgIHVsdGltbyA9IHBhdHJvbmVzZGluYW1pY29zKCk7XHJcbiAgICAgXHJcblxyXG4gICAgfWVsc2UgaWYoYWNpZXJ0b3M9PTIpe1xyXG4gICAgICBcclxuICAgICAgY29uc3QgY2FzYTIgPSBqdWVnb0thcGxheS5hZGQoW1xyXG4gICAgICAgIGp1ZWdvS2FwbGF5LnBvcyg0MDAsLTUpLFxyXG4gICAgICAgIGp1ZWdvS2FwbGF5LnNwcml0ZShcImNhc2EyXCIpLFxyXG4gICAgICAgIGp1ZWdvS2FwbGF5LnNjYWxlKDAuOCksXHJcbiAgICAgICAganVlZ29LYXBsYXkuaGVhbHRoKDMpLFxyXG4gICAgICAgIGp1ZWdvS2FwbGF5LmFyZWEoKSxcclxuICAgICAgICBcImNhc2FcIixcclxuICAgICAgICB7IHo6IDEgfSAvLyBBc2VndXJhIHF1ZSBlbCBqdWdhZG9yIGVzdMOpIGVuIHVuYSBjYXBhIHN1cGVyaW9yXHJcbiAgICAgIF0pO1xyXG4gICAgICBjb25zb2xlLmxvZyhcIkVsIG1lbnNhamUgZXM6IFwiICsgYWNpZXJ0b3MpO1xyXG4gICAgICBzZXRTdGF0ZSh0cnVlKTtcclxuICAgICAgY2FtYmlhckdhbmFyKHRydWUpO1xyXG4gICAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICBzZXRTdGF0ZShmYWxzZSk7XHJcbiAgICAgIH0sIDIwMDApOyBcclxuICAgICAgXHJcbiAgICAgIHVsdGltbyA9IHBhdHJvbmVzZGluYW1pY29zKCk7XHJcblxyXG4gICAgfWVsc2UgaWYoYWNpZXJ0b3M9PTMpe1xyXG4gICAgICBjb25zdCBjYXNhMyA9IGp1ZWdvS2FwbGF5LmFkZChbXHJcbiAgICAgICAganVlZ29LYXBsYXkucG9zKDQwMCwtNSksXHJcbiAgICAgICAganVlZ29LYXBsYXkuc3ByaXRlKFwiY2FzYTNcIiksXHJcbiAgICAgICAganVlZ29LYXBsYXkuc2NhbGUoMC44KSxcclxuICAgICAgICBqdWVnb0thcGxheS5oZWFsdGgoMyksXHJcbiAgICAgICAganVlZ29LYXBsYXkuYXJlYSgpLFxyXG4gICAgICAgIFwiY2FzYVwiLFxyXG4gICAgICAgIHsgejogMSB9IC8vIEFzZWd1cmEgcXVlIGVsIGp1Z2Fkb3IgZXN0w6kgZW4gdW5hIGNhcGEgc3VwZXJpb3JcclxuICAgICAgXSk7XHJcbiAgICAgIGNvbnNvbGUubG9nKFwiRWwgbWVuc2FqZSBlczogXCIgKyBhY2llcnRvcyk7XHJcbiAgICAgIC8vcGF0cm9uZXNkaW5hbWljb3MoKS5jbGVhcjtcclxuICAgICAgc2V0U3RhdGUodHJ1ZSk7XHJcbiAgICAgIGNhbWJpYXJHYW5hcih0cnVlKTtcclxuICAgICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgc2V0U3RhdGUoZmFsc2UpO1xyXG4gICAgICB9LCAyMDAwKTsgXHJcbiAgICAgIFxyXG5cclxuICAgICAgdWx0aW1vID0gcGF0cm9uZXNkaW5hbWljb3MoKTtcclxuXHJcbiAgICB9XHJcbiAgfTtcclxuXHJcblxyXG4gIGZ1bmN0aW9uIGxpbXBpYXJOb3RhcygpIHtcclxuICAgIFxyXG4gICAgc3ByaXRlc05vdGFzID0ganVlZ29LYXBsYXkuZ2V0KFwibm90YXNcIik7XHJcbiAgICBjb25zb2xlLmxvZyhzcHJpdGVzTm90YXMpO1xyXG4gICAgc3ByaXRlc05vdGFzLmZvckVhY2goKHNwcml0ZXNOb3RhczphbnkpPT57XHJcbiAgICAgIHNwcml0ZXNOb3Rhcy5kZXN0cm95KCk7XHJcbiAgICB9KVxyXG4gICAgcHVudG9QYXJ0aWRhID0gd2luZG93LmlubmVyV2lkdGgvM1xyXG4gICAgcHVudG9QYXJ0aWRhWT0gd2luZG93LmlubmVySGVpZ2h0LzJcclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIHBhdHJvbmVzZGluYW1pY29zKCkge1xyXG4gICAgLy8gTGltcGlhIGxvcyBzcHJpdGVzIGRlIG5vdGFzIGFudGVyaW9yZXNcclxuICAgIGxpbXBpYXJOb3RhcygpO1xyXG5cclxuICAgIGNvbnN0IHBhdHJvbmVzID0gW1xyXG4gICAgICBbMCwgMSwgMiwgMCwgMSwgMiwgMCwgMSwgMixdLFxyXG4gICAgICBbMCwgMiwgMCwgMiwgMCwgMiwgMCwgMiwgMCxdLFxyXG4gICAgICBbMCwgMCwgMCwgMSwgMSwgMSwgMiwgMiwgMixdLFxyXG4gICAgICBbMSwgMiwgMCwgMSwgMiwgMCwgMSwgMiwgMCxdLFxyXG4gICAgICBbMiwgMSwgMCwgMiwgMSwgMCwgMiwgMSwgMCxdLFxyXG4gICAgICBbMCwgMCwgMSwgMSwgMCwgMCwgMSwgMSwgMCxdLFxyXG4gICAgXTtcclxuXHJcbiAgICBsZXQgZGVsYXkgPSA1MDA7IC8vIEluaWNpYWxpemFyIGVsIHJldHJhc29cclxuICAgIGNvbnN0IG51bWVyb3MgPSBnZW5lcmFyTnVtZXJvc0F6YXIoKTtcclxuICAgIGNvbnNvbGUubG9nKG51bWVyb3MpO1xyXG4gICAgY29uc29sZS5sb2cocGF0cm9uZXNbbnVtZXJvc1swXV0pO1xyXG4gICAgY29uc3QgdWx0aW1vID0gcGF0cm9uZXNbbnVtZXJvc1swXV1bcGF0cm9uZXNbbnVtZXJvc1swXV0ubGVuZ3RoIC0gMV07XHJcbiAgICBwYXRyb25lc1tudW1lcm9zWzBdXSA9IHBhdHJvbmVzW251bWVyb3NbMF1dLnNsaWNlKDAsIC0xKTtcclxuXHJcbiAgICAvLyBJdGVyYXIgc29icmUgZWwgcGF0csOzbiBzZWxlY2Npb25hZG9cclxuICAgIHBhdHJvbmVzW251bWVyb3NbMF1dLmZvckVhY2goKG51bWVyb0F6YXI6IG51bWJlcikgPT4ge1xyXG4gICAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICBcclxuXHJcbiAgICAgICAgc3dpdGNoIChudW1lcm9BemFyKSB7XHJcbiAgICAgICAgICBjYXNlIDA6XHJcbiAgICAgICAgICAgIG51ZXZvU3ByaXRlID0ganVlZ29LYXBsYXkuYWRkKFtcclxuICAgICAgICAgICAgICBqdWVnb0thcGxheS5wb3MoXHJcbiAgICAgICAgICAgICAgICBwdW50b1BhcnRpZGEsXHJcbiAgICAgICAgICAgICAgICBqdWVnb0thcGxheS5jZW50ZXIoKS55IC8gMiArIHB1bnRvUGFydGlkYVlcclxuICAgICAgICAgICAgICApLFxyXG4gICAgICAgICAgICAgIGp1ZWdvS2FwbGF5LnNwcml0ZShcIm5vdGFzXCIpLFxyXG4gICAgICAgICAgICAgIGp1ZWdvS2FwbGF5LnNjYWxlKDAuMSksXHJcbiAgICAgICAgICAgICAgeyB6OiAyIH0sXHJcbiAgICAgICAgICAgICAgXCJub3Rhc1wiXHJcbiAgICAgICAgICAgIF0pO1xyXG4gICAgICAgICAgICBudWV2b1Nwcml0ZS5mcmFtZSA9IDE7XHJcbiAgICAgICAgICAgIHB1bnRvUGFydGlkYSArPSA3MDtcclxuICAgICAgICAgICAganVlZ29LYXBsYXkucGxheShcIkEwXCIsIHsgdm9sdW1lOiAxLCBzcGVlZDogMS41LCBsb29wOiBmYWxzZSB9KTtcclxuICAgICAgICAgICAgYnJlYWs7XHJcblxyXG4gICAgICAgICAgY2FzZSAxOlxyXG4gICAgICAgICAgICBudWV2b1Nwcml0ZSA9IGp1ZWdvS2FwbGF5LmFkZChbXHJcbiAgICAgICAgICAgICAganVlZ29LYXBsYXkucG9zKFxyXG4gICAgICAgICAgICAgICAgcHVudG9QYXJ0aWRhLFxyXG4gICAgICAgICAgICAgICAganVlZ29LYXBsYXkuY2VudGVyKCkueSAvIDIgKyBwdW50b1BhcnRpZGFZXHJcbiAgICAgICAgICAgICAgKSxcclxuICAgICAgICAgICAgICBqdWVnb0thcGxheS5zcHJpdGUoXCJub3Rhc1wiKSxcclxuICAgICAgICAgICAgICBqdWVnb0thcGxheS5zY2FsZSgwLjEpLFxyXG4gICAgICAgICAgICAgIHsgejogMiB9LFxyXG4gICAgICAgICAgICAgIFwibm90YXNcIlxyXG4gICAgICAgICAgICBdKTtcclxuICAgICAgICAgICAgbnVldm9TcHJpdGUuZnJhbWUgPSAwO1xyXG4gICAgICAgICAgICBwdW50b1BhcnRpZGEgKz0gNzA7XHJcbiAgICAgICAgICAgIGp1ZWdvS2FwbGF5LnBsYXkoXCJBMVwiLCB7IHZvbHVtZTogMSwgc3BlZWQ6IDEuNSwgbG9vcDogZmFsc2UgfSk7XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG5cclxuICAgICAgICAgIGNhc2UgMjpcclxuICAgICAgICAgICAgbnVldm9TcHJpdGUgPSBqdWVnb0thcGxheS5hZGQoW1xyXG4gICAgICAgICAgICAgIGp1ZWdvS2FwbGF5LnBvcyhcclxuICAgICAgICAgICAgICAgIHB1bnRvUGFydGlkYSxcclxuICAgICAgICAgICAgICAgIGp1ZWdvS2FwbGF5LmNlbnRlcigpLnkgLyAyICsgcHVudG9QYXJ0aWRhWVxyXG4gICAgICAgICAgICAgICksXHJcbiAgICAgICAgICAgICAganVlZ29LYXBsYXkuc3ByaXRlKFwibm90YXNcIiksXHJcbiAgICAgICAgICAgICAganVlZ29LYXBsYXkuc2NhbGUoMC4xKSxcclxuICAgICAgICAgICAgICB7IHo6IDIgfSxcclxuICAgICAgICAgICAgICBcIm5vdGFzXCJcclxuICAgICAgICAgICAgXSk7XHJcbiAgICAgICAgICAgIG51ZXZvU3ByaXRlLmZyYW1lID0gMjtcclxuICAgICAgICAgICAgcHVudG9QYXJ0aWRhICs9IDcwO1xyXG4gICAgICAgICAgICBqdWVnb0thcGxheS5wbGF5KFwiQTJcIiwgeyB2b2x1bWU6IDEsIHNwZWVkOiAxLjUsIGxvb3A6IGZhbHNlIH0pO1xyXG4gICAgICAgICAgICBicmVhaztcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIEFncmVnYSBlbCBzcHJpdGUgYWwgYXJyYXkgcGFyYSByYXN0cmVhciB0b2RvcyBsb3Mgc3ByaXRlcyBjcmVhZG9zXHJcbiAgICAgICAgaWYgKG51ZXZvU3ByaXRlKSB7XHJcbiAgICAgICAgICBzcHJpdGVzTm90YXMucHVzaChudWV2b1Nwcml0ZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9LCBkZWxheSk7XHJcblxyXG4gICAgICBkZWxheSArPSAxMDAwOyAvLyBJbmNyZW1lbnRhciBlbCByZXRyYXNvIHBhcmEgZWwgc2lndWllbnRlIHNwcml0ZVxyXG4gICAgfSk7XHJcblxyXG4gICAgcmV0dXJuIHVsdGltbzsgLy8gUmV0b3JuYSBlbCDDumx0aW1vIHZhbG9yIGRlbCBwYXRyw7NuXHJcbiAgfVxyXG5cclxuXHJcbiAgICAgICAgbGV0IHVsdGltbyA9IHBhdHJvbmVzZGluYW1pY29zKCk7XHJcbiAgICAgICAgXHJcblxyXG4gICAgICAgIGNpcmNsZTEub25DbGljayggKCkgPT4ge1xyXG4gICAgICAgICAganVlZ29LYXBsYXkucGxheShcIkEwXCIsIHtcclxuICAgICAgICAgICAgdm9sdW1lOiAxLCBcclxuICAgICAgICAgICAgc3BlZWQ6IDEuNSwgXHJcbiAgICAgICAgICAgIGxvb3A6IGZhbHNlLCBcclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgaWYodWx0aW1vID09IDApe1xyXG5cclxuICAgICAgICAgICAgcGxheWVyLnBsYXkoXCJyaWdodFwiKTtcclxuICAgICAgICAgICAgdHJlZS5wbGF5KFwiYnllXCIpO1xyXG4gICAgICAgICAgICBhY2llcnRvcysrO1xyXG4gICAgICAgICAgICB2YWxpZGFyQWNpZXJ0b3MoKTtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coXCJGYWxsYXN0ZVwiICt1bHRpbW8pXHJcbiAgICAgICAgICAgIHNldFN0YXRlKHRydWUpO1xyXG4gICAgICAgICAgICBjYW1iaWFyR2FuYXIoZmFsc2UpO1xyXG4gICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICAgICAgICBzZXRTdGF0ZShmYWxzZSk7XHJcbiAgICAgICAgICAgIH0sIDIwMDApOyBcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIH0pXHJcbiAgICAgICAgICBjaXJjbGUyLm9uQ2xpY2soICgpID0+IHtcclxuICAgICAgICAgIGp1ZWdvS2FwbGF5LnBsYXkoXCJBMVwiLCB7XHJcbiAgICAgICAgICAgIHZvbHVtZTogMSwgXHJcbiAgICAgICAgICAgIHNwZWVkOiAxLjUsIFxyXG4gICAgICAgICAgICBsb29wOiBmYWxzZSwgXHJcbiAgICAgICAgICB9KTtcclxuICAgICAgICAgIGlmKHVsdGltbyA9PSAxKXtcclxuXHJcbiAgICAgICAgICAgIHBsYXllci5wbGF5KFwicmlnaHRcIik7XHJcbiAgICAgICAgICAgIHRyZWUucGxheShcImJ5ZVwiKTtcclxuICAgICAgICAgICAgYWNpZXJ0b3MrKztcclxuICAgICAgICAgICAgdmFsaWRhckFjaWVydG9zKCk7XHJcbiAgICAgICAgICAgIC8vY29uc29sZS5sb2coXCJFbCBtZW5zYWplIGVzOiBcIiArIGFjaWVydG9zKTtcclxuICAgICAgICAgICBcclxuICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIkZhbGxhc3RlXCIrdWx0aW1vKVxyXG4gICAgICAgICAgICBzZXRTdGF0ZSh0cnVlKTtcclxuICAgICAgICAgICAgY2FtYmlhckdhbmFyKGZhbHNlKTtcclxuICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgICAgICAgc2V0U3RhdGUoZmFsc2UpO1xyXG4gICAgICAgICAgICB9LCAyMDAwKTsgXHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICB9KVxyXG5cclxuICAgICAgICAgIGNpcmNsZTMub25DbGljayggKCkgPT4ge1xyXG4gICAgICAgICAganVlZ29LYXBsYXkucGxheShcIkEyXCIsIHtcclxuICAgICAgICAgICAgdm9sdW1lOiAxLCBcclxuICAgICAgICAgICAgc3BlZWQ6IDEuNSwgXHJcbiAgICAgICAgICAgIGxvb3A6IGZhbHNlLCBcclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgaWYodWx0aW1vID09IDIpe1xyXG5cclxuICAgICAgICAgICAgcGxheWVyLnBsYXkoXCJyaWdodFwiKTtcclxuICAgICAgICAgICAgdHJlZS5wbGF5KFwiYnllXCIpO1xyXG4gICAgICAgICAgICBhY2llcnRvcysrO1xyXG4gICAgICAgICAgICB2YWxpZGFyQWNpZXJ0b3MoKTtcclxuICAgICAgICAgICAgLy9jb25zb2xlLmxvZyhcIkVsIG1lbnNhamUgZXM6IFwiICsgYWNpZXJ0b3MpO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIkZhbGxhc3RlXCIgK3VsdGltbylcclxuICAgICAgICAgICAgc2V0U3RhdGUodHJ1ZSk7XHJcbiAgICAgICAgICAgIGNhbWJpYXJHYW5hcihmYWxzZSk7XHJcbiAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgICAgICAgIHNldFN0YXRlKGZhbHNlKTtcclxuICAgICAgICAgICAgfSwgMjAwMCk7IFxyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgfSlcclxuXHJcbiAgICAgICAgIFxyXG5cclxuICAgICAgICAgIHBsYXllci5vbkRlYXRoKCgpID0+IHtcclxuICAgICAgICAgICAganVlZ29LYXBsYXkuZGVzdHJveShwbGF5ZXIpO1xyXG4gICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgXHJcbiAgICAgICAgXHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIFxyXG4gICAgICAgICAgKS5jYXRjaChcclxuICAgICAgICAgICAgKChlcnJvcjphbnkpID0+IHtcclxuICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcImxlcm9sZXJvbGVyb1wiKVxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgKSAgIFxyXG4gIFxyXG4gIFxyXG4gICAgICAgIH0pIC8vRmluIC0gT25sb2FkKClcclxuICAgICAgIFxyXG4gIFxyXG59XHJcbiAgXHJcbiAgICAvL3JldHVybiA8Y2FudmFzIGlkPVwiZ2FtZVwiIHN0eWxlPXt7IHdpZHRoOiBcIjEwMHZ3XCIsIGhlaWdodDogXCIxMDB2aFwiIH19IC8+OztcclxuICAgIFxyXG4gIFxyXG5cclxuXHJcbiJdLCJuYW1lcyI6WyJnZW5lcmFyRXNxdWVtYU1hcGEiLCJnZW5lcmFyTnVtZXJvc0F6YXIiLCJTQ1JFRU5fUkVTT0xVVElPTl9YIiwid2luZG93IiwiaW5uZXJXaWR0aCIsIlNDUkVFTl9SRVNPTFVUSU9OX1kiLCJpbm5lckhlaWdodCIsIlRJTEVEX01BUF9fV0lEVEhfTlVNQkVSIiwiVElMRURfTUFQX0hFSUdIVF9OVU1CRVIiLCJUSUxFRF9XSURUSCIsIlRJTEVEX0hFSUdIVCIsImFjaWVydG9zIiwibnVldm9TcHJpdGUiLCJjYW1iaW9OaXZlbCIsIk5pdmVsMSIsImp1ZWdvS2FwbGF5Iiwic2V0U3RhdGUiLCJjYW1iaWFyR2FuYXIiLCJsb2FkU3ByaXRlIiwic2xpY2VYIiwic2xpY2VZIiwiYW5pbXMiLCJyaWdodCIsImZyb20iLCJ0byIsImxvb3AiLCJxdWlldCIsImJ5ZSIsInNlbWljb3JjaGVhMSIsInNlbWljb3JjaGVhMiIsInNlbWljb3JjaGVhMyIsImxvYWRTb3VuZCIsIlAxIiwib25Mb2FkIiwibml2ZWxQcmluY2lwYWwiLCJuYW1lRm9sZGVyIiwibmFtZUZpbGUiLCJ0aWxlV2lkdGgiLCJ0aWxlSGVpZ2h0IiwicG9zIiwidmVjMiIsInVybFRleHR1cmEiLCJkaW1lbnNpb25UZXh0dXJhc1giLCJkaW1lbnNpb25UZXh0dXJhc1kiLCJmaXJzdGdpZCIsInRoZW4iLCJyZXN1bHRhZG8iLCJwbGF5ZXIiLCJhZGQiLCJzcHJpdGUiLCJzY2FsZSIsImhlYWx0aCIsImFyZWEiLCJ6IiwidHJlZSIsInZlbG9jaWRhZCIsImNpcmNsZTEiLCJjZW50ZXIiLCJ4IiwieSIsImZyYW1lIiwiY2lyY2xlMiIsImNpcmNsZTMiLCJwdW50b1BhcnRpZGEiLCJwdW50b1BhcnRpZGFZIiwic3ByaXRlc05vdGFzIiwidmFsaWRhckFjaWVydG9zIiwiY2FzYTEiLCJjb25zb2xlIiwibG9nIiwic2V0VGltZW91dCIsInVsdGltbyIsInBhdHJvbmVzZGluYW1pY29zIiwiY2FzYTIiLCJjYXNhMyIsImxpbXBpYXJOb3RhcyIsImdldCIsImZvckVhY2giLCJkZXN0cm95IiwicGF0cm9uZXMiLCJkZWxheSIsIm51bWVyb3MiLCJsZW5ndGgiLCJzbGljZSIsIm51bWVyb0F6YXIiLCJwbGF5Iiwidm9sdW1lIiwic3BlZWQiLCJwdXNoIiwib25DbGljayIsIm9uRGVhdGgiLCJjYXRjaCIsImVycm9yIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/videojuego/1stLevel.tsx\n"));

/***/ })

});