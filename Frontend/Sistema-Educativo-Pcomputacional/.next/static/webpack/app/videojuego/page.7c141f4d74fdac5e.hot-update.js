"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/videojuego/page",{

/***/ "(app-pages-browser)/./src/app/videojuego/1stLevel.tsx":
/*!*****************************************!*\
  !*** ./src/app/videojuego/1stLevel.tsx ***!
  \*****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Nivel1: () => (/* binding */ Nivel1),\n/* harmony export */   cambioNivel: () => (/* binding */ cambioNivel)\n/* harmony export */ });\n/* harmony import */ var _MapsGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../MapsGenerator */ \"(app-pages-browser)/./src/MapsGenerator.tsx\");\n/* harmony import */ var _utils_generarNumerosAzar__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/generarNumerosAzar */ \"(app-pages-browser)/./src/utils/generarNumerosAzar.ts\");\n\n\nconst SCREEN_RESOLUTION_X = window.innerWidth;\nconst SCREEN_RESOLUTION_Y = window.innerHeight;\nconst TILED_MAP__WIDTH_NUMBER = 21;\nconst TILED_MAP_HEIGHT_NUMBER = 16;\nconst TILED_WIDTH = SCREEN_RESOLUTION_X / TILED_MAP__WIDTH_NUMBER;\nconst TILED_HEIGHT = SCREEN_RESOLUTION_Y / TILED_MAP_HEIGHT_NUMBER;\nlet aciertos = 0;\nlet nuevoSprite;\nlet cambioNivel = 0;\nfunction Nivel1(juegoKaplay) {\n    // Referencia persistente para almacenar la instancia de Kaplay\n    juegoKaplay.loadSprite(\"casa3\", \"sprites/buildings/House_Blue.png\", {\n        sliceX: 1,\n        sliceY: 1\n    });\n    juegoKaplay.loadSprite(\"casa2\", \"sprites/buildings/House_Destroyed.png\", {\n        sliceX: 1,\n        sliceY: 1\n    });\n    juegoKaplay.loadSprite(\"casa1\", \"sprites/buildings/House_Construction.png\", {\n        sliceX: 1,\n        sliceY: 1\n    });\n    juegoKaplay.loadSprite(\"House_Blue\", \"sprites/buildings/House_Blue.png\", {\n        sliceX: 1,\n        sliceY: 1\n    });\n    juegoKaplay.loadSprite(\"Tower_Blue\", \"sprites/buildings/Tower_Blue.png\", {\n        sliceX: 1,\n        sliceY: 1\n    });\n    juegoKaplay.loadSprite(\"pawn\", \"sprites/characters/Pawn_Purple.png\", {\n        sliceX: 6,\n        sliceY: 6,\n        anims: {\n            right: {\n                from: 18,\n                to: 23,\n                loop: false\n            },\n            quiet: {\n                from: 0,\n                to: 0,\n                loop: false\n            }\n        }\n    });\n    juegoKaplay.loadSprite(\"tree\", \"sprites/deco/Tree.png\", {\n        sliceX: 4,\n        sliceY: 3,\n        anims: {\n            bye: {\n                from: 8,\n                to: 8,\n                loop: false\n            },\n            quiet: {\n                from: 0,\n                to: 3,\n                loop: true\n            }\n        }\n    });\n    juegoKaplay.loadSprite(\"heart\", \"sprites/heart.png\", {\n        sliceX: 1,\n        sliceY: 1\n    });\n    juegoKaplay.loadSprite(\"title-0\", \"prueba/title-0.png\", {\n        sliceX: 1,\n        sliceY: 1\n    });\n    juegoKaplay.loadSprite(\"notas\", \"nivel2/notas_musicales.png\", {\n        sliceX: 3,\n        sliceY: 1\n    });\n    juegoKaplay.loadSprite(\"notas_circulo\", \"nivel2/notas_musicales_con_circulo.png\", {\n        sliceX: 3,\n        sliceY: 1\n    });\n    let semicorchea1;\n    let semicorchea2;\n    let semicorchea3;\n    juegoKaplay.loadSound(\"sonidoPrueba\", \"button_09-190435.mp3\");\n    const P1 = juegoKaplay.loadSound(\"P1\", \"./sounds/P1.mp3\");\n    juegoKaplay.loadSound(\"P2\", \"./sounds/P2.mp3\");\n    juegoKaplay.loadSound(\"P3\", \"./sounds/P3.mp3\");\n    juegoKaplay.loadSound(\"P4\", \"./sounds/P4.mp3\");\n    juegoKaplay.loadSound(\"P5\", \"./sounds/P5.mp3\");\n    juegoKaplay.loadSound(\"P6\", \"./sounds/P6.mp3\");\n    juegoKaplay.loadSound(\"A0\", \"./sounds/A0.mp3\");\n    juegoKaplay.loadSound(\"A1\", \"./sounds/A1.mp3\");\n    juegoKaplay.loadSound(\"A2\", \"./sounds/A2.mp3\");\n    // Cargar sprites adicionales\n    [\n        \"up\",\n        \"down\",\n        \"left\",\n        \"right\"\n    ].forEach((dir)=>{\n        juegoKaplay.loadSprite(dir, \"sprites/\".concat(dir, \"-arrow.png\"));\n    });\n    juegoKaplay.loadSprite(\"redbox\", \"red-border-box.png\");\n    juegoKaplay.onLoad(async ()=>{\n        //Practicando aqui\n        const nivelPrincipal = (0,_MapsGenerator__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(juegoKaplay, {\n            nameFolder: \"nivel2\",\n            nameFile: \"prueba3.png\",\n            tileWidth: TILED_WIDTH,\n            tileHeight: TILED_HEIGHT,\n            pos: juegoKaplay.vec2(0, 0)\n        }, \"./fondomusical.json\", [\n            {\n                urlTextura: \"./nivel2/Water.png\",\n                dimensionTexturasX: 2,\n                dimensionTexturasY: 2,\n                firstgid: 1 //orden en el que tiled extrae esas imagenes (esta llega a cuatro)\n            },\n            {\n                urlTextura: \"./nivel2/Tilemap_Flat.png\",\n                dimensionTexturasX: 20,\n                dimensionTexturasY: 8,\n                firstgid: 5 //(esta comienza en 5)\n            },\n            {\n                urlTextura: \"./nivel2/Tilemap_Elevation.png\",\n                dimensionTexturasX: 8,\n                dimensionTexturasY: 16,\n                firstgid: 165\n            },\n            {\n                urlTextura: \"./nivel2/Tilemap_Flat.png\",\n                dimensionTexturasX: 20,\n                dimensionTexturasY: 8,\n                firstgid: 5 //(esta comienza en 5)\n            }\n        ]).then((resultado)=>{\n            // Jugador\n            const player = juegoKaplay.add([\n                juegoKaplay.pos(730, 5),\n                juegoKaplay.sprite(\"pawn\"),\n                juegoKaplay.scale(1),\n                juegoKaplay.health(3),\n                juegoKaplay.area(),\n                \"player\",\n                {\n                    z: 1\n                } // Asegura que el jugador esté en una capa superior\n            ]);\n            const tree = juegoKaplay.add([\n                juegoKaplay.pos(810, -5),\n                juegoKaplay.sprite(\"tree\"),\n                juegoKaplay.scale(0.8),\n                juegoKaplay.health(3),\n                juegoKaplay.area(),\n                \"tree\",\n                {\n                    z: 1\n                } // Asegura que el jugador esté en una capa superior\n            ]);\n            /* const casa = juegoKaplay.add([\r\n            juegoKaplay.pos(400,-5),\r\n            juegoKaplay.sprite(\"casa1\"),\r\n            juegoKaplay.scale(0.8),\r\n            juegoKaplay.health(3),\r\n            juegoKaplay.area(),\r\n            \"casa\",\r\n            { z: 1 } // Asegura que el jugador esté en una capa superior\r\n          ]);*/ // Flechas\n            const arrows = {\n                up: juegoKaplay.add([\n                    juegoKaplay.pos(0, juegoKaplay.center().y / 8),\n                    juegoKaplay.sprite(\"up\"),\n                    juegoKaplay.scale(2),\n                    juegoKaplay.area(),\n                    {\n                        z: 1\n                    } // Asegura que el jugador esté en una capa superior\n                ]),\n                down: juegoKaplay.add([\n                    juegoKaplay.pos(0, juegoKaplay.center().y / 4),\n                    juegoKaplay.sprite(\"down\"),\n                    juegoKaplay.scale(2),\n                    juegoKaplay.area(),\n                    {\n                        z: 1\n                    } // Asegura que el jugador esté en una capa superior\n                ]),\n                left: juegoKaplay.add([\n                    juegoKaplay.pos(0, juegoKaplay.center().y / 2),\n                    juegoKaplay.sprite(\"left\"),\n                    juegoKaplay.scale(2),\n                    juegoKaplay.area(),\n                    {\n                        z: 1\n                    } // Asegura que el jugador esté en una capa superior\n                ]),\n                right: juegoKaplay.add([\n                    juegoKaplay.pos(0, juegoKaplay.center().y),\n                    juegoKaplay.sprite(\"right\"),\n                    juegoKaplay.scale(2),\n                    juegoKaplay.area(),\n                    {\n                        z: 1\n                    } // Asegura que el jugador esté en una capa superior\n                ])\n            };\n            const velocidad = 440;\n            // Movimiento con teclado\n            juegoKaplay.onKeyDown(\"w\", ()=>{\n                player.move(0, -velocidad);\n            });\n            juegoKaplay.onKeyDown(\"s\", ()=>{\n                player.move(0, velocidad);\n            });\n            juegoKaplay.onKeyDown(\"a\", ()=>{\n                player.move(-velocidad, 0);\n            });\n            juegoKaplay.onKeyDown(\"d\", ()=>{\n                player.move(velocidad, 0);\n            });\n            // Movimiento con clic\n            arrows.up.onClick(()=>{\n                player.move(0, -velocidad);\n                player.play(\"up\");\n            });\n            arrows.down.onClick(()=>{\n                player.move(0, velocidad);\n                player.play(\"down\");\n            });\n            arrows.left.onClick(()=>{\n                player.move(-velocidad, 0);\n                player.play(\"left\");\n            });\n            arrows.right.onClick(()=>{\n                player.move(velocidad, 0);\n                player.play(\"right\");\n            });\n            const circle1 = juegoKaplay.add([\n                juegoKaplay.pos(juegoKaplay.center().x - juegoKaplay.center().x / 4, juegoKaplay.center().y + juegoKaplay.center().y / 2 + juegoKaplay.center().y / 6),\n                juegoKaplay.sprite(\"notas_circulo\", {\n                    frame: 0\n                }),\n                juegoKaplay.area(),\n                juegoKaplay.scale(0.20),\n                {\n                    z: 1\n                }\n            ]);\n            const circle2 = juegoKaplay.add([\n                juegoKaplay.pos(juegoKaplay.center().x, juegoKaplay.center().y + juegoKaplay.center().y / 2 + juegoKaplay.center().y / 6),\n                juegoKaplay.sprite(\"notas_circulo\", {\n                    frame: 1\n                }),\n                juegoKaplay.area(),\n                juegoKaplay.scale(0.20),\n                {\n                    z: 1\n                }\n            ]);\n            const circle3 = juegoKaplay.add([\n                juegoKaplay.pos(juegoKaplay.center().x + juegoKaplay.center().x / 4, juegoKaplay.center().y + juegoKaplay.center().y / 2 + juegoKaplay.center().y / 6),\n                juegoKaplay.sprite(\"notas_circulo\", {\n                    frame: 2\n                }),\n                juegoKaplay.area(),\n                juegoKaplay.scale(0.20),\n                {\n                    z: 1\n                }\n            ]);\n            let puntoPartida = window.innerWidth / 3;\n            const puntoPartidaY = window.innerHeight / 2;\n            //let spritecito=\"\";\n            /* function clean(spritecito: any){\r\n            juegoKaplay.destroy(spritecito);\r\n          };*/ // Array para almacenar los sprites de notas creados\n            let spritesNotas = []; // Asegúrate de usar el tipo correcto para los sprites en Kaboom.js\n            function limpiarNotas() {\n                spritesNotas = juegoKaplay.get(\"notas\");\n                console.log(spritesNotas);\n                spritesNotas.forEach((spritesNotas)=>{\n                    spritesNotas.destroy();\n                });\n            }\n            function patronesdinamicos() {\n                // Limpia los sprites de notas anteriores\n                limpiarNotas();\n                const patrones = [\n                    [\n                        0,\n                        1,\n                        2,\n                        0,\n                        1,\n                        2,\n                        0,\n                        1,\n                        2\n                    ],\n                    [\n                        2,\n                        2,\n                        1,\n                        1,\n                        0,\n                        0,\n                        2,\n                        2,\n                        1\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        1,\n                        1,\n                        1,\n                        2,\n                        2,\n                        2\n                    ],\n                    [\n                        1,\n                        2,\n                        0,\n                        1,\n                        2,\n                        0,\n                        1,\n                        2,\n                        0\n                    ],\n                    [\n                        2,\n                        1,\n                        0,\n                        2,\n                        1,\n                        0,\n                        2,\n                        1,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        1,\n                        1,\n                        0,\n                        0,\n                        1,\n                        1,\n                        0\n                    ]\n                ];\n                let delay = 1000; // Inicializar el retraso\n                const numeros = (0,_utils_generarNumerosAzar__WEBPACK_IMPORTED_MODULE_1__[\"default\"])();\n                console.log(numeros);\n                console.log(patrones[numeros[0]]);\n                const ultimo = patrones[numeros[0]][patrones[numeros[0]].length - 1];\n                patrones[numeros[0]] = patrones[numeros[0]].slice(0, -1);\n                // Iterar sobre el patrón seleccionado\n                patrones[numeros[0]].forEach((numeroAzar)=>{\n                    setTimeout(()=>{\n                        switch(numeroAzar){\n                            case 0:\n                                nuevoSprite = juegoKaplay.add([\n                                    juegoKaplay.pos(puntoPartida, juegoKaplay.center().y / 2 + puntoPartidaY),\n                                    juegoKaplay.sprite(\"notas\"),\n                                    juegoKaplay.scale(0.1),\n                                    {\n                                        z: 2\n                                    },\n                                    \"notas\"\n                                ]);\n                                nuevoSprite.frame = 0;\n                                puntoPartida += 70;\n                                juegoKaplay.play(\"A0\", {\n                                    volume: 1,\n                                    speed: 1,\n                                    loop: false\n                                });\n                                break;\n                            case 1:\n                                nuevoSprite = juegoKaplay.add([\n                                    juegoKaplay.pos(puntoPartida, juegoKaplay.center().y / 2 + puntoPartidaY),\n                                    juegoKaplay.sprite(\"notas\"),\n                                    juegoKaplay.scale(0.1),\n                                    {\n                                        z: 2\n                                    },\n                                    \"notas\"\n                                ]);\n                                nuevoSprite.frame = 1;\n                                puntoPartida += 70;\n                                juegoKaplay.play(\"A1\", {\n                                    volume: 1,\n                                    speed: 1,\n                                    loop: false\n                                });\n                                break;\n                            case 2:\n                                nuevoSprite = juegoKaplay.add([\n                                    juegoKaplay.pos(puntoPartida, juegoKaplay.center().y / 2 + puntoPartidaY),\n                                    juegoKaplay.sprite(\"notas\"),\n                                    juegoKaplay.scale(0.1),\n                                    {\n                                        z: 2\n                                    },\n                                    \"notas\"\n                                ]);\n                                nuevoSprite.frame = 2;\n                                puntoPartida += 70;\n                                juegoKaplay.play(\"A2\", {\n                                    volume: 1,\n                                    speed: 1,\n                                    loop: false\n                                });\n                                break;\n                        }\n                        // Agrega el sprite al array para rastrear todos los sprites creados\n                        if (nuevoSprite) {\n                            spritesNotas.push(nuevoSprite);\n                        }\n                    }, delay);\n                    delay += 1000; // Incrementar el retraso para el siguiente sprite\n                });\n                return ultimo; // Retorna el último valor del patrón\n            }\n            let ultimo = patronesdinamicos();\n            circle1.onClick(()=>{\n                juegoKaplay.play(\"A0\", {\n                    volume: 1,\n                    speed: 1,\n                    loop: false\n                });\n                if (ultimo === 1) {\n                    player.play(\"right\");\n                    tree.play(\"bye\");\n                    aciertos++;\n                } else {\n                    console.log(\"Fallaste\");\n                }\n            });\n            circle2.onClick(()=>{\n                juegoKaplay.play(\"A1\", {\n                    volume: 1,\n                    speed: 1,\n                    loop: false\n                });\n                if (ultimo === 0) {\n                    player.play(\"right\");\n                    tree.play(\"bye\");\n                    aciertos++;\n                //console.log(\"El mensaje es: \" + aciertos);\n                } else {\n                    console.log(\"Fallaste\");\n                }\n            });\n            circle3.onClick(()=>{\n                juegoKaplay.play(\"A2\", {\n                    volume: 1,\n                    speed: 1,\n                    loop: false\n                });\n                if (ultimo === 2) {\n                    player.play(\"right\");\n                    tree.play(\"bye\");\n                    aciertos++;\n                //console.log(\"El mensaje es: \" + aciertos);\n                } else {\n                    console.log(\"Fallaste\");\n                }\n            });\n            juegoKaplay.onClick(()=>{\n                if (aciertos == 1) {\n                    const casa1 = juegoKaplay.add([\n                        juegoKaplay.pos(400, -5),\n                        juegoKaplay.sprite(\"casa1\"),\n                        juegoKaplay.scale(0.8),\n                        juegoKaplay.health(3),\n                        juegoKaplay.area(),\n                        \"casa\",\n                        {\n                            z: 1\n                        } // Asegura que el jugador esté en una capa superior\n                    ]);\n                    console.log(\"El mensaje es: \" + aciertos);\n                    patronesdinamicos();\n                } else if (aciertos == 2) {\n                    const casa2 = juegoKaplay.add([\n                        juegoKaplay.pos(400, -5),\n                        juegoKaplay.sprite(\"casa2\"),\n                        juegoKaplay.scale(0.8),\n                        juegoKaplay.health(3),\n                        juegoKaplay.area(),\n                        \"casa\",\n                        {\n                            z: 1\n                        } // Asegura que el jugador esté en una capa superior\n                    ]);\n                    console.log(\"El mensaje es: \" + aciertos);\n                    patronesdinamicos();\n                } else if (aciertos == 3) {\n                    const casa3 = juegoKaplay.add([\n                        juegoKaplay.pos(400, -5),\n                        juegoKaplay.sprite(\"casa3\"),\n                        juegoKaplay.scale(0.8),\n                        juegoKaplay.health(3),\n                        juegoKaplay.area(),\n                        \"casa\",\n                        {\n                            z: 1\n                        } // Asegura que el jugador esté en una capa superior\n                    ]);\n                    console.log(\"El mensaje es: \" + aciertos);\n                    //patronesdinamicos().clear;\n                    patronesdinamicos();\n                }\n            });\n            player.onDeath(()=>{\n                juegoKaplay.destroy(player);\n            });\n        }).catch((error)=>{});\n    }) //Fin - Onload()\n    ;\n//return <canvas id=\"game\" style={{ width: \"100vw\", height: \"100vh\" }} />;;\n}\n_c = Nivel1;\nvar _c;\n$RefreshReg$(_c, \"Nivel1\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvdmlkZW9qdWVnby8xc3RMZXZlbC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUNxRDtBQUNXO0FBRWhFLE1BQU1FLHNCQUE4QkMsT0FBT0MsVUFBVTtBQUNyRCxNQUFNQyxzQkFBOEJGLE9BQU9HLFdBQVc7QUFDdEQsTUFBTUMsMEJBQWtDO0FBQ3hDLE1BQU1DLDBCQUFrQztBQUN4QyxNQUFNQyxjQUFzQlAsc0JBQXNCSztBQUNsRCxNQUFNRyxlQUF1Qkwsc0JBQXNCRztBQUNuRCxJQUFJRyxXQUFXO0FBQ2YsSUFBSUM7QUFDRyxJQUFJQyxjQUFjLEVBQUU7QUFLcEIsU0FBU0MsT0FBT0MsV0FBK0I7SUFDbEQsK0RBQStEO0lBRS9EQSxZQUFZQyxVQUFVLENBQUMsU0FBUyxvQ0FBb0M7UUFDbEVDLFFBQVE7UUFDUkMsUUFBUTtJQUNWO0lBRUFILFlBQVlDLFVBQVUsQ0FBQyxTQUFTLHlDQUF5QztRQUN2RUMsUUFBUTtRQUNSQyxRQUFRO0lBQ1Y7SUFFQUgsWUFBWUMsVUFBVSxDQUFDLFNBQVMsNENBQTRDO1FBQzFFQyxRQUFRO1FBQ1JDLFFBQVE7SUFDVjtJQUVBSCxZQUFZQyxVQUFVLENBQUMsY0FBYyxvQ0FBb0M7UUFDdkVDLFFBQVE7UUFDUkMsUUFBUTtJQUNWO0lBRUFILFlBQVlDLFVBQVUsQ0FBQyxjQUFjLG9DQUFvQztRQUN2RUMsUUFBUTtRQUNSQyxRQUFRO0lBQ1Y7SUFFQUgsWUFBWUMsVUFBVSxDQUFDLFFBQVEsc0NBQXNDO1FBQ25FQyxRQUFRO1FBQ1JDLFFBQVE7UUFDUkMsT0FBTztZQUNMQyxPQUFPO2dCQUFFQyxNQUFNO2dCQUFJQyxJQUFJO2dCQUFJQyxNQUFNO1lBQU07WUFDdkNDLE9BQU87Z0JBQUVILE1BQU07Z0JBQUdDLElBQUk7Z0JBQUdDLE1BQU07WUFBTTtRQUN2QztJQUNGO0lBRUFSLFlBQVlDLFVBQVUsQ0FBQyxRQUFRLHlCQUF5QjtRQUN0REMsUUFBUTtRQUNSQyxRQUFRO1FB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QUM7d0JBQ3JCeEIsWUFBWWtDLE1BQU0sQ0FBQzt3QkFDbkJsQyxZQUFZbUMsS0FBSyxDQUFDO3dCQUNsQm5DLFlBQVlvQyxNQUFNLENBQUM7d0JBQ25CcEMsWUFBWXFDLElBQUk7d0JBQ2hCO3dCQUNBOzRCQUFFQyxHQUFHO3dCQUFFLEVBQUUsbURBQW1EO3FCQUM3RDtvQkFDRHVCLFFBQVFDLEdBQUcsQ0FBQyxvQkFBb0JsRTtvQkFDaEMsNEJBQTRCO29CQUc1Qm9FO2dCQUVGO1lBQ0Y7WUFHQWhDLE9BQU8rQyxPQUFPLENBQUM7Z0JBQ2IvRSxZQUFZK0QsT0FBTyxDQUFDL0I7WUFDdEI7UUFFRixHQUNJZ0QsS0FBSyxDQUNKLENBQUNDLFNBRUY7SUFJSixHQUFHLGdCQUFnQjs7QUFFdkIsMkVBQTJFO0FBQzdFO0tBbGZjbEYiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcV0lORE9XUyAxMVxcRG9jdW1lbnRzXFxTaXN0ZW1hLUVkdWNhdGl2by1QY29tcHV0YWNpb25hbFxcRnJvbnRlbmRcXFNpc3RlbWEtRWR1Y2F0aXZvLVBjb21wdXRhY2lvbmFsXFxzcmNcXGFwcFxcdmlkZW9qdWVnb1xcMXN0TGV2ZWwudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7R2FtZU9iaiwgS0FQTEFZQ3R4fSBmcm9tIFwia2FwbGF5XCI7XHJcbmltcG9ydCBnZW5lcmFyRXNxdWVtYU1hcGEgZnJvbSBcIi4uLy4uL01hcHNHZW5lcmF0b3JcIjtcclxuaW1wb3J0IGdlbmVyYXJOdW1lcm9zQXphciBmcm9tIFwiLi4vLi4vdXRpbHMvZ2VuZXJhck51bWVyb3NBemFyXCI7XHJcblxyXG5jb25zdCBTQ1JFRU5fUkVTT0xVVElPTl9YOiBudW1iZXIgPSB3aW5kb3cuaW5uZXJXaWR0aCBcclxuY29uc3QgU0NSRUVOX1JFU09MVVRJT05fWTogbnVtYmVyID0gd2luZG93LmlubmVySGVpZ2h0IFxyXG5jb25zdCBUSUxFRF9NQVBfX1dJRFRIX05VTUJFUjogbnVtYmVyID0gMjFcclxuY29uc3QgVElMRURfTUFQX0hFSUdIVF9OVU1CRVI6IG51bWJlciA9IDE2XHJcbmNvbnN0IFRJTEVEX1dJRFRIOiBudW1iZXIgPSBTQ1JFRU5fUkVTT0xVVElPTl9YIC8gVElMRURfTUFQX19XSURUSF9OVU1CRVJcclxuY29uc3QgVElMRURfSEVJR0hUOiBudW1iZXIgPSBTQ1JFRU5fUkVTT0xVVElPTl9ZIC8gVElMRURfTUFQX0hFSUdIVF9OVU1CRVJcclxubGV0IGFjaWVydG9zID0gMDtcclxubGV0IG51ZXZvU3ByaXRlOiBHYW1lT2JqO1xyXG5leHBvcnQgbGV0IGNhbWJpb05pdmVsID0gMDtcclxuXHJcblxyXG5cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBOaXZlbDEoanVlZ29LYXBsYXk6S0FQTEFZQ3R4PHt9LG5ldmVyPikge1xyXG4gICAgLy8gUmVmZXJlbmNpYSBwZXJzaXN0ZW50ZSBwYXJhIGFsbWFjZW5hciBsYSBpbnN0YW5jaWEgZGUgS2FwbGF5XHJcbiAgICBcclxuICAgIGp1ZWdvS2FwbGF5LmxvYWRTcHJpdGUoXCJjYXNhM1wiLCBcInNwcml0ZXMvYnVpbGRpbmdzL0hvdXNlX0JsdWUucG5nXCIsIHtcclxuICAgICAgc2xpY2VYOiAxLFxyXG4gICAgICBzbGljZVk6IDEsXHJcbiAgICB9KTtcclxuXHJcbiAgICBqdWVnb0thcGxheS5sb2FkU3ByaXRlKFwiY2FzYTJcIiwgXCJzcHJpdGVzL2J1aWxkaW5ncy9Ib3VzZV9EZXN0cm95ZWQucG5nXCIsIHtcclxuICAgICAgc2xpY2VYOiAxLFxyXG4gICAgICBzbGljZVk6IDEsXHJcbiAgICB9KTtcclxuXHJcbiAgICBqdWVnb0thcGxheS5sb2FkU3ByaXRlKFwiY2FzYTFcIiwgXCJzcHJpdGVzL2J1aWxkaW5ncy9Ib3VzZV9Db25zdHJ1Y3Rpb24ucG5nXCIsIHtcclxuICAgICAgc2xpY2VYOiAxLFxyXG4gICAgICBzbGljZVk6IDEsXHJcbiAgICB9KTtcclxuXHJcbiAgICBqdWVnb0thcGxheS5sb2FkU3ByaXRlKFwiSG91c2VfQmx1ZVwiLCBcInNwcml0ZXMvYnVpbGRpbmdzL0hvdXNlX0JsdWUucG5nXCIsIHtcclxuICAgICAgc2xpY2VYOiAxLFxyXG4gICAgICBzbGljZVk6IDEsXHJcbiAgICB9KTtcclxuXHJcbiAgICBqdWVnb0thcGxheS5sb2FkU3ByaXRlKFwiVG93ZXJfQmx1ZVwiLCBcInNwcml0ZXMvYnVpbGRpbmdzL1Rvd2VyX0JsdWUucG5nXCIsIHtcclxuICAgICAgc2xpY2VYOiAxLFxyXG4gICAgICBzbGljZVk6IDEsXHJcbiAgICB9KTtcclxuICBcclxuICAgIGp1ZWdvS2FwbGF5LmxvYWRTcHJpdGUoXCJwYXduXCIsIFwic3ByaXRlcy9jaGFyYWN0ZXJzL1Bhd25fUHVycGxlLnBuZ1wiLCB7XHJcbiAgICAgIHNsaWNlWDogNixcclxuICAgICAgc2xpY2VZOiA2LFxyXG4gICAgICBhbmltczoge1xyXG4gICAgICAgIHJpZ2h0OiB7IGZyb206IDE4LCB0bzogMjMsIGxvb3A6IGZhbHNlIH0sXHJcbiAgICAgICAgcXVpZXQ6IHsgZnJvbTogMCwgdG86IDAsIGxvb3A6IGZhbHNlIH0sXHJcbiAgICAgIH0sXHJcbiAgICB9KTtcclxuXHJcbiAgICBqdWVnb0thcGxheS5sb2FkU3ByaXRlKFwidHJlZVwiLCBcInNwcml0ZXMvZGVjby9UcmVlLnBuZ1wiLCB7XHJcbiAgICAgIHNsaWNlWDogNCxcclxuICAgICAgc2xpY2VZOiAzLFxyXG4gICAgICBhbmltczoge1xyXG4gICAgICAgIGJ5ZTogeyBmcm9tOiA4LCB0bzogOCwgbG9vcDogZmFsc2UgfSxcclxuICAgICAgICBxdWlldDogeyBmcm9tOiAwLCB0bzogMywgbG9vcDogdHJ1ZSB9LFxyXG4gICAgICB9LFxyXG4gICAgfSk7XHJcbiAgXHJcblxyXG5cclxuXHJcblxyXG4gICAganVlZ29LYXBsYXkubG9hZFNwcml0ZShcImhlYXJ0XCIsIFwic3ByaXRlcy9oZWFydC5wbmdcIiwge1xyXG4gICAgICBzbGljZVg6IDEsXHJcbiAgICAgIHNsaWNlWTogMSxcclxuICAgIH0pO1xyXG5cclxuICAgIGp1ZWdvS2FwbGF5LmxvYWRTcHJpdGUoXCJ0aXRsZS0wXCIsIFwicHJ1ZWJhL3RpdGxlLTAucG5nXCIsIHtcclxuICAgICAgc2xpY2VYOiAxLFxyXG4gICAgICBzbGljZVk6IDEsXHJcbiAgICB9KTtcclxuXHJcbiAgICBqdWVnb0thcGxheS5sb2FkU3ByaXRlKFwibm90YXNcIiwgXCJuaXZlbDIvbm90YXNfbXVzaWNhbGVzLnBuZ1wiLCB7XHJcbiAgICAgIHNsaWNlWDogMyxcclxuICAgICAgc2xpY2VZOiAxXHJcbiAgICB9KTtcclxuICBcclxuICAgIGp1ZWdvS2FwbGF5LmxvYWRTcHJpdGUoXCJub3Rhc19jaXJjdWxvXCIsIFwibml2ZWwyL25vdGFzX211c2ljYWxlc19jb25fY2lyY3Vsby5wbmdcIiwge1xyXG4gICAgICBzbGljZVg6IDMsXHJcbiAgICAgIHNsaWNlWTogMVxyXG4gICAgfSk7XHJcblxyXG4gICAgbGV0IHNlbWljb3JjaGVhMTogR2FtZU9iajtcclxuICAgIGxldCBzZW1pY29yY2hlYTI6IEdhbWVPYmo7XHJcbiAgICBsZXQgc2VtaWNvcmNoZWEzOkdhbWVPYmo7XHJcblxyXG4gXHJcblxyXG4gICAganVlZ29LYXBsYXkubG9hZFNvdW5kKFwic29uaWRvUHJ1ZWJhXCIsIFwiYnV0dG9uXzA5LTE5MDQzNS5tcDNcIik7XHJcbiAgICBjb25zdCBQMT0ganVlZ29LYXBsYXkubG9hZFNvdW5kKFwiUDFcIiwgXCIuL3NvdW5kcy9QMS5tcDNcIik7XHJcbiAgICBqdWVnb0thcGxheS5sb2FkU291bmQoXCJQMlwiLCBcIi4vc291bmRzL1AyLm1wM1wiKTtcclxuICAgIGp1ZWdvS2FwbGF5LmxvYWRTb3VuZChcIlAzXCIsIFwiLi9zb3VuZHMvUDMubXAzXCIpO1xyXG4gICAganVlZ29LYXBsYXkubG9hZFNvdW5kKFwiUDRcIiwgXCIuL3NvdW5kcy9QNC5tcDNcIik7XHJcbiAgICBqdWVnb0thcGxheS5sb2FkU291bmQoXCJQNVwiLCBcIi4vc291bmRzL1A1Lm1wM1wiKTtcclxuICAgIGp1ZWdvS2FwbGF5LmxvYWRTb3VuZChcIlA2XCIsIFwiLi9zb3VuZHMvUDYubXAzXCIpO1xyXG4gICAganVlZ29LYXBsYXkubG9hZFNvdW5kKFwiQTBcIiwgXCIuL3NvdW5kcy9BMC5tcDNcIik7XHJcbiAgICBqdWVnb0thcGxheS5sb2FkU291bmQoXCJBMVwiLCBcIi4vc291bmRzL0ExLm1wM1wiKTtcclxuICAgIGp1ZWdvS2FwbGF5LmxvYWRTb3VuZChcIkEyXCIsIFwiLi9zb3VuZHMvQTIubXAzXCIpO1xyXG4gIFxyXG4gICAgICAgIFxyXG4gICAgICAgIFxyXG4gIFxyXG4gIFxyXG4gICAgLy8gQ2FyZ2FyIHNwcml0ZXMgYWRpY2lvbmFsZXNcclxuICAgIFtcInVwXCIsIFwiZG93blwiLCBcImxlZnRcIiwgXCJyaWdodFwiXS5mb3JFYWNoKChkaXIpID0+IHtcclxuICAgICAganVlZ29LYXBsYXkubG9hZFNwcml0ZShkaXIsIGBzcHJpdGVzLyR7ZGlyfS1hcnJvdy5wbmdgKTtcclxuICAgIH0pO1xyXG5cclxuICAgIGp1ZWdvS2FwbGF5LmxvYWRTcHJpdGUoXCJyZWRib3hcIiwgXCJyZWQtYm9yZGVyLWJveC5wbmdcIik7XHJcbiAgICAgICAgXHJcbiAgXHJcbiAgICBqdWVnb0thcGxheS5vbkxvYWQoYXN5bmMgKCkgPT4ge1xyXG4gICAgICAgIC8vUHJhY3RpY2FuZG8gYXF1aVxyXG5cclxuXHJcbiAgICAgIGNvbnN0IG5pdmVsUHJpbmNpcGFsID0gZ2VuZXJhckVzcXVlbWFNYXBhKFxyXG4gICAgICAgIGp1ZWdvS2FwbGF5LFxyXG4gICAgICAgIHtcclxuICAgICAgICAgIG5hbWVGb2xkZXI6IFwibml2ZWwyXCIsXHJcbiAgICAgICAgICBuYW1lRmlsZTogXCJwcnVlYmEzLnBuZ1wiLFxyXG4gICAgICAgICAgdGlsZVdpZHRoOiBUSUxFRF9XSURUSCxcclxuICAgICAgICAgIHRpbGVIZWlnaHQ6IFRJTEVEX0hFSUdIVCxcclxuICAgICAgICAgIHBvczoganVlZ29LYXBsYXkudmVjMigwLCAwKSxcclxuICAgICAgICB9LFxyXG4gICAgICAgIGAuL2ZvbmRvbXVzaWNhbC5qc29uYCwgICAvL2FyY2hpdm8gZGUgZG9uZGUgdm95IGEgZXh0cmFlciBlbCBtYXBhXHJcbiAgICAgICAgXHJcbiAgICAgICAgWyAvL0FjYSBsbyBpbXBvcnRhbnRlIGVzIHF1ZSBkZWJvIGludHJvZHVjaXIgZWwgb3JkZW4gZGUgbGFzIHRleHR1cmFzIGVuIGVsIHF1ZSB2YSwgY2FwYSBwb3IgY2FwYVxyXG4gICAgICAgICAge1xyXG4gICAgICAgICAgICB1cmxUZXh0dXJhOiBcIi4vbml2ZWwyL1dhdGVyLnBuZ1wiLCAgXHJcbiAgICAgICAgICAgIGRpbWVuc2lvblRleHR1cmFzWDogMiwgLy9EaW1lbnNpb25lcyBkZSB0aWxlZFxyXG4gICAgICAgICAgICBkaW1lbnNpb25UZXh0dXJhc1k6IDIsXHJcbiAgICAgICAgICAgIGZpcnN0Z2lkOiAxIC8vb3JkZW4gZW4gZWwgcXVlIHRpbGVkIGV4dHJhZSBlc2FzIGltYWdlbmVzIChlc3RhIGxsZWdhIGEgY3VhdHJvKVxyXG4gICAgICAgICAgfSwgXHJcbiAgICAgICAgICB7XHJcbiAgICAgICAgICAgIHVybFRleHR1cmE6IFwiLi9uaXZlbDIvVGlsZW1hcF9GbGF0LnBuZ1wiLFxyXG4gICAgICAgICAgICBkaW1lbnNpb25UZXh0dXJhc1g6IDIwLFxyXG4gICAgICAgICAgICBkaW1lbnNpb25UZXh0dXJhc1k6IDgsXHJcbiAgICAgICAgICAgIGZpcnN0Z2lkOiA1IC8vKGVzdGEgY29taWVuemEgZW4gNSlcclxuICAgICAgICAgIH0sICAgICAgICBcclxuICAgICAgICAgIHt1cmxUZXh0dXJhOiBcIi4vbml2ZWwyL1RpbGVtYXBfRWxldmF0aW9uLnBuZ1wiLFxyXG4gICAgICAgICAgZGltZW5zaW9uVGV4dHVyYXNYOiA4LFxyXG4gICAgICAgICAgZGltZW5zaW9uVGV4dHVyYXNZOiAxNixcclxuICAgICAgICAgIGZpcnN0Z2lkOiAxNjVcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICB1cmxUZXh0dXJhOiBcIi4vbml2ZWwyL1RpbGVtYXBfRmxhdC5wbmdcIixcclxuICAgICAgICAgICAgZGltZW5zaW9uVGV4dHVyYXNYOiAyMCxcclxuICAgICAgICAgICAgZGltZW5zaW9uVGV4dHVyYXNZOiA4LFxyXG4gICAgICAgICAgICBmaXJzdGdpZDogNSAvLyhlc3RhIGNvbWllbnphIGVuIDUpXHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgIFxyXG4gIFxyXG4gICAgICAgIF1cclxuICAgICAgKVxyXG4gICAgICAudGhlbihcclxuICAgICAgICAocmVzdWx0YWRvOiBhbnkpID0+IHtcclxuICAgICAgICBcclxuICAgICAgICAgIC8vIEp1Z2Fkb3JcclxuICAgICAgICAgIGNvbnN0IHBsYXllciA9IGp1ZWdvS2FwbGF5LmFkZChbXHJcbiAgICAgICAgICAgIGp1ZWdvS2FwbGF5LnBvcyg3MzAsIDUpLFxyXG4gICAgICAgICAgICBqdWVnb0thcGxheS5zcHJpdGUoXCJwYXduXCIpLFxyXG4gICAgICAgICAgICBqdWVnb0thcGxheS5zY2FsZSgxKSxcclxuICAgICAgICAgICAganVlZ29LYXBsYXkuaGVhbHRoKDMpLFxyXG4gICAgICAgICAgICBqdWVnb0thcGxheS5hcmVhKCksXHJcbiAgICAgICAgICAgIFwicGxheWVyXCIsXHJcbiAgICAgICAgICAgIHsgejogMSB9IC8vIEFzZWd1cmEgcXVlIGVsIGp1Z2Fkb3IgZXN0w6kgZW4gdW5hIGNhcGEgc3VwZXJpb3JcclxuICAgICAgICAgIF0pO1xyXG5cclxuICAgICAgICAgIGNvbnN0IHRyZWUgPSBqdWVnb0thcGxheS5hZGQoW1xyXG4gICAgICAgICAgICBqdWVnb0thcGxheS5wb3MoODEwLC01KSxcclxuICAgICAgICAgICAganVlZ29LYXBsYXkuc3ByaXRlKFwidHJlZVwiKSxcclxuICAgICAgICAgICAganVlZ29LYXBsYXkuc2NhbGUoMC44KSxcclxuICAgICAgICAgICAganVlZ29LYXBsYXkuaGVhbHRoKDMpLFxyXG4gICAgICAgICAgICBqdWVnb0thcGxheS5hcmVhKCksXHJcbiAgICAgICAgICAgIFwidHJlZVwiLFxyXG4gICAgICAgICAgICB7IHo6IDEgfSAvLyBBc2VndXJhIHF1ZSBlbCBqdWdhZG9yIGVzdMOpIGVuIHVuYSBjYXBhIHN1cGVyaW9yXHJcbiAgICAgICAgICBdKTtcclxuXHJcbiAgICAgICAgIC8qIGNvbnN0IGNhc2EgPSBqdWVnb0thcGxheS5hZGQoW1xyXG4gICAgICAgICAgICBqdWVnb0thcGxheS5wb3MoNDAwLC01KSxcclxuICAgICAgICAgICAganVlZ29LYXBsYXkuc3ByaXRlKFwiY2FzYTFcIiksXHJcbiAgICAgICAgICAgIGp1ZWdvS2FwbGF5LnNjYWxlKDAuOCksXHJcbiAgICAgICAgICAgIGp1ZWdvS2FwbGF5LmhlYWx0aCgzKSxcclxuICAgICAgICAgICAganVlZ29LYXBsYXkuYXJlYSgpLFxyXG4gICAgICAgICAgICBcImNhc2FcIixcclxuICAgICAgICAgICAgeyB6OiAxIH0gLy8gQXNlZ3VyYSBxdWUgZWwganVnYWRvciBlc3TDqSBlbiB1bmEgY2FwYSBzdXBlcmlvclxyXG4gICAgICAgICAgXSk7Ki9cclxuXHJcblxyXG4gICAgICAgICAgLy8gRmxlY2hhc1xyXG4gICAgICAgICAgY29uc3QgYXJyb3dzID0ge1xyXG4gICAgICAgICAgICB1cDoganVlZ29LYXBsYXkuYWRkKFtcclxuICAgICAgICAgICAgICBqdWVnb0thcGxheS5wb3MoMCwgKGp1ZWdvS2FwbGF5LmNlbnRlcigpLnkpLzgpLFxyXG4gICAgICAgICAgICAgIGp1ZWdvS2FwbGF5LnNwcml0ZShcInVwXCIpLFxyXG4gICAgICAgICAgICAgIGp1ZWdvS2FwbGF5LnNjYWxlKDIpLFxyXG4gICAgICAgICAgICAgIGp1ZWdvS2FwbGF5LmFyZWEoKSxcclxuICAgICAgICAgICAgICB7IHo6IDEgfSAvLyBBc2VndXJhIHF1ZSBlbCBqdWdhZG9yIGVzdMOpIGVuIHVuYSBjYXBhIHN1cGVyaW9yXHJcbiAgICAgICAgICAgIF0pLFxyXG4gICAgICAgICAgICBkb3duOiBqdWVnb0thcGxheS5hZGQoW1xyXG4gICAgICAgICAgICAgIGp1ZWdvS2FwbGF5LnBvcygwICwoanVlZ29LYXBsYXkuY2VudGVyKCkueSkvNCksXHJcbiAgICAgICAgICAgICAganVlZ29LYXBsYXkuc3ByaXRlKFwiZG93blwiKSxcclxuICAgICAgICAgICAgICBqdWVnb0thcGxheS5zY2FsZSgyKSxcclxuICAgICAgICAgICAgICBqdWVnb0thcGxheS5hcmVhKCksXHJcbiAgICAgICAgICAgICAgeyB6OiAxIH0gLy8gQXNlZ3VyYSBxdWUgZWwganVnYWRvciBlc3TDqSBlbiB1bmEgY2FwYSBzdXBlcmlvclxyXG4gICAgICAgICAgICBdKSxcclxuICAgICAgICAgICAgbGVmdDoganVlZ29LYXBsYXkuYWRkKFtcclxuICAgICAgICAgICAgICBqdWVnb0thcGxheS5wb3MoMCwoanVlZ29LYXBsYXkuY2VudGVyKCkueSkvMiksXHJcbiAgICAgICAgICAgICAganVlZ29LYXBsYXkuc3ByaXRlKFwibGVmdFwiKSxcclxuICAgICAgICAgICAgICBqdWVnb0thcGxheS5zY2FsZSgyKSxcclxuICAgICAgICAgICAgICBqdWVnb0thcGxheS5hcmVhKCksXHJcbiAgICAgICAgICAgICAgeyB6OiAxIH0gLy8gQXNlZ3VyYSBxdWUgZWwganVnYWRvciBlc3TDqSBlbiB1bmEgY2FwYSBzdXBlcmlvclxyXG4gICAgICAgICAgICBdKSxcclxuICAgICAgICAgICAgcmlnaHQ6IGp1ZWdvS2FwbGF5LmFkZChbXHJcbiAgICAgICAgICAgICAganVlZ29LYXBsYXkucG9zKDAsKGp1ZWdvS2FwbGF5LmNlbnRlcigpLnkpKSxcclxuICAgICAgICAgICAgICBqdWVnb0thcGxheS5zcHJpdGUoXCJyaWdodFwiKSxcclxuICAgICAgICAgICAgICBqdWVnb0thcGxheS5zY2FsZSgyKSxcclxuICAgICAgICAgICAgICBqdWVnb0thcGxheS5hcmVhKCksXHJcbiAgICAgICAgICAgICAgeyB6OiAxIH0gLy8gQXNlZ3VyYSBxdWUgZWwganVnYWRvciBlc3TDqSBlbiB1bmEgY2FwYSBzdXBlcmlvclxyXG4gICAgICAgICAgICBdKSxcclxuICAgICAgICAgIH07XHJcblxyXG4gICAgICAgICAgY29uc3QgdmVsb2NpZGFkID0gNDQwO1xyXG5cclxuICAgICAgICAgIC8vIE1vdmltaWVudG8gY29uIHRlY2xhZG9cclxuICAgICAgICAgIGp1ZWdvS2FwbGF5Lm9uS2V5RG93bihcIndcIiwgKCkgPT4ge1xyXG4gICAgICAgICAgICBwbGF5ZXIubW92ZSgwLCAtdmVsb2NpZGFkKTtcclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgICAganVlZ29LYXBsYXkub25LZXlEb3duKFwic1wiLCAoKSA9PiB7XHJcbiAgICAgICAgICAgIHBsYXllci5tb3ZlKDAsIHZlbG9jaWRhZCk7XHJcbiAgICAgICAgICB9KTtcclxuICAgICAgICAgIGp1ZWdvS2FwbGF5Lm9uS2V5RG93bihcImFcIiwgKCkgPT4ge1xyXG4gICAgICAgICAgICBwbGF5ZXIubW92ZSgtdmVsb2NpZGFkLCAwKTtcclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgICAganVlZ29LYXBsYXkub25LZXlEb3duKFwiZFwiLCAoKSA9PiB7XHJcbiAgICAgICAgICAgIHBsYXllci5tb3ZlKHZlbG9jaWRhZCwgMCk7XHJcbiAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAvLyBNb3ZpbWllbnRvIGNvbiBjbGljXHJcbiAgICAgICAgICBhcnJvd3MudXAub25DbGljaygoKSA9PiB7XHJcbiAgICAgICAgICAgIHBsYXllci5tb3ZlKDAsIC12ZWxvY2lkYWQpO1xyXG4gICAgICAgICAgICBwbGF5ZXIucGxheShcInVwXCIpO1xyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgICBhcnJvd3MuZG93bi5vbkNsaWNrKCgpID0+IHtcclxuICAgICAgICAgICAgcGxheWVyLm1vdmUoMCwgdmVsb2NpZGFkKTtcclxuICAgICAgICAgICAgcGxheWVyLnBsYXkoXCJkb3duXCIpO1xyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgICBhcnJvd3MubGVmdC5vbkNsaWNrKCgpID0+IHtcclxuICAgICAgICAgICAgcGxheWVyLm1vdmUoLXZlbG9jaWRhZCwgMCk7XHJcbiAgICAgICAgICAgIHBsYXllci5wbGF5KFwibGVmdFwiKTtcclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgYXJyb3dzLnJpZ2h0Lm9uQ2xpY2soKCkgPT4ge1xyXG4gICAgICAgICAgICBwbGF5ZXIubW92ZSh2ZWxvY2lkYWQsIDApO1xyXG4gICAgICAgICAgICBwbGF5ZXIucGxheShcInJpZ2h0XCIpO1xyXG4gICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgY29uc3QgY2lyY2xlMSA9IGp1ZWdvS2FwbGF5LmFkZChbXHJcbiAgICAgICAgICBqdWVnb0thcGxheS5wb3MoanVlZ29LYXBsYXkuY2VudGVyKCkueCAtIGp1ZWdvS2FwbGF5LmNlbnRlcigpLnggLyA0LCBqdWVnb0thcGxheS5jZW50ZXIoKS55ICsganVlZ29LYXBsYXkuY2VudGVyKCkueSAvIDIgKyBqdWVnb0thcGxheS5jZW50ZXIoKS55IC8gNiksXHJcbiAgICAgICAgICBqdWVnb0thcGxheS5zcHJpdGUoXCJub3Rhc19jaXJjdWxvXCIsIHtmcmFtZTogMH0pLFxyXG4gICAgICAgICAganVlZ29LYXBsYXkuYXJlYSgpLFxyXG4gICAgICAgICAganVlZ29LYXBsYXkuc2NhbGUoMC4yMCksXHJcbiAgICAgICAgICB7IHo6IDF9LC8vIEFzZWd1cmEgcXVlIGVsIGp1Z2Fkb3IgZXN0w6kgZW4gdW5hIGNhcGEgc3VwZXJpb3IsXHJcbiAgICAgICAgICBdKVxyXG5cclxuICAgICAgICAgIGNvbnN0IGNpcmNsZTIgPSBqdWVnb0thcGxheS5hZGQoW1xyXG4gICAgICAgICAganVlZ29LYXBsYXkucG9zKGp1ZWdvS2FwbGF5LmNlbnRlcigpLngsIGp1ZWdvS2FwbGF5LmNlbnRlcigpLnkgKyBqdWVnb0thcGxheS5jZW50ZXIoKS55IC8gMiArIGp1ZWdvS2FwbGF5LmNlbnRlcigpLnkgLyA2KSxcclxuICAgICAgICAgIGp1ZWdvS2FwbGF5LnNwcml0ZShcIm5vdGFzX2NpcmN1bG9cIiwge2ZyYW1lOiAxfSksXHJcbiAgICAgICAgICBqdWVnb0thcGxheS5hcmVhKCksXHJcbiAgICAgICAgICBqdWVnb0thcGxheS5zY2FsZSgwLjIwKSxcclxuICAgICAgICAgIHsgejogMX0sLy8gQXNlZ3VyYSBxdWUgZWwganVnYWRvciBlc3TDqSBlbiB1bmEgY2FwYSBzdXBlcmlvcixcclxuICAgICAgICAgIF0pXHJcblxyXG4gICAgICAgICAgY29uc3QgY2lyY2xlMyA9IGp1ZWdvS2FwbGF5LmFkZChbXHJcbiAgICAgICAgICBqdWVnb0thcGxheS5wb3MoanVlZ29LYXBsYXkuY2VudGVyKCkueCArIGp1ZWdvS2FwbGF5LmNlbnRlcigpLnggLyA0LCBqdWVnb0thcGxheS5jZW50ZXIoKS55ICsganVlZ29LYXBsYXkuY2VudGVyKCkueSAvIDIgKyBqdWVnb0thcGxheS5jZW50ZXIoKS55IC8gNiksXHJcbiAgICAgICAgICBqdWVnb0thcGxheS5zcHJpdGUoXCJub3Rhc19jaXJjdWxvXCIsIHtmcmFtZTogMn0pLFxyXG4gICAgICAgICAganVlZ29LYXBsYXkuYXJlYSgpLFxyXG4gICAgICAgICAganVlZ29LYXBsYXkuc2NhbGUoMC4yMCksXHJcbiAgICAgICAgICB7IHo6IDF9LC8vIEFzZWd1cmEgcXVlIGVsIGp1Z2Fkb3IgZXN0w6kgZW4gdW5hIGNhcGEgc3VwZXJpb3IsXHJcbiAgICAgICAgICBdKVxyXG5cclxuICAgICAgICBsZXQgcHVudG9QYXJ0aWRhOiBudW1iZXIgPSB3aW5kb3cuaW5uZXJXaWR0aC8zXHJcbiAgICAgICAgY29uc3QgcHVudG9QYXJ0aWRhWTpudW1iZXIgPSB3aW5kb3cuaW5uZXJIZWlnaHQvMlxyXG4gICAgICAgIC8vbGV0IHNwcml0ZWNpdG89XCJcIjtcclxuXHJcbiAgICAgICAgIC8qIGZ1bmN0aW9uIGNsZWFuKHNwcml0ZWNpdG86IGFueSl7XHJcbiAgICAgICAgICAgIGp1ZWdvS2FwbGF5LmRlc3Ryb3koc3ByaXRlY2l0byk7XHJcbiAgICAgICAgICB9OyovXHJcblxyXG4vLyBBcnJheSBwYXJhIGFsbWFjZW5hciBsb3Mgc3ByaXRlcyBkZSBub3RhcyBjcmVhZG9zXHJcbiAgbGV0IHNwcml0ZXNOb3RhczogR2FtZU9ialtdID0gW107IC8vIEFzZWfDunJhdGUgZGUgdXNhciBlbCB0aXBvIGNvcnJlY3RvIHBhcmEgbG9zIHNwcml0ZXMgZW4gS2Fib29tLmpzXHJcblxyXG4gIGZ1bmN0aW9uIGxpbXBpYXJOb3RhcygpIHtcclxuICAgIFxyXG4gICAgc3ByaXRlc05vdGFzID0ganVlZ29LYXBsYXkuZ2V0KFwibm90YXNcIik7XHJcbiAgICBjb25zb2xlLmxvZyhzcHJpdGVzTm90YXMpO1xyXG4gICAgc3ByaXRlc05vdGFzLmZvckVhY2goKHNwcml0ZXNOb3RhczphbnkpPT57XHJcbiAgICAgIHNwcml0ZXNOb3Rhcy5kZXN0cm95KCk7XHJcbiAgICB9KVxyXG5cclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIHBhdHJvbmVzZGluYW1pY29zKCkge1xyXG4gICAgLy8gTGltcGlhIGxvcyBzcHJpdGVzIGRlIG5vdGFzIGFudGVyaW9yZXNcclxuICAgIGxpbXBpYXJOb3RhcygpO1xyXG5cclxuICAgIGNvbnN0IHBhdHJvbmVzID0gW1xyXG4gICAgICBbMCwgMSwgMiwgMCwgMSwgMiwgMCwgMSwgMl0sXHJcbiAgICAgIFsyLCAyLCAxLCAxLCAwLCAwLCAyLCAyLCAxXSxcclxuICAgICAgWzAsIDAsIDAsIDEsIDEsIDEsIDIsIDIsIDJdLFxyXG4gICAgICBbMSwgMiwgMCwgMSwgMiwgMCwgMSwgMiwgMF0sXHJcbiAgICAgIFsyLCAxLCAwLCAyLCAxLCAwLCAyLCAxLCAwXSxcclxuICAgICAgWzAsIDAsIDEsIDEsIDAsIDAsIDEsIDEsIDBdLFxyXG4gICAgXTtcclxuXHJcbiAgICBsZXQgZGVsYXkgPSAxMDAwOyAvLyBJbmljaWFsaXphciBlbCByZXRyYXNvXHJcbiAgICBjb25zdCBudW1lcm9zID0gZ2VuZXJhck51bWVyb3NBemFyKCk7XHJcbiAgICBjb25zb2xlLmxvZyhudW1lcm9zKTtcclxuICAgIGNvbnNvbGUubG9nKHBhdHJvbmVzW251bWVyb3NbMF1dKTtcclxuICAgIGNvbnN0IHVsdGltbyA9IHBhdHJvbmVzW251bWVyb3NbMF1dW3BhdHJvbmVzW251bWVyb3NbMF1dLmxlbmd0aCAtIDFdO1xyXG4gICAgcGF0cm9uZXNbbnVtZXJvc1swXV0gPSBwYXRyb25lc1tudW1lcm9zWzBdXS5zbGljZSgwLCAtMSk7XHJcblxyXG4gICAgLy8gSXRlcmFyIHNvYnJlIGVsIHBhdHLDs24gc2VsZWNjaW9uYWRvXHJcbiAgICBwYXRyb25lc1tudW1lcm9zWzBdXS5mb3JFYWNoKChudW1lcm9BemFyOiBudW1iZXIpID0+IHtcclxuICAgICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgXHJcblxyXG4gICAgICAgIHN3aXRjaCAobnVtZXJvQXphcikge1xyXG4gICAgICAgICAgY2FzZSAwOlxyXG4gICAgICAgICAgICBudWV2b1Nwcml0ZSA9IGp1ZWdvS2FwbGF5LmFkZChbXHJcbiAgICAgICAgICAgICAganVlZ29LYXBsYXkucG9zKFxyXG4gICAgICAgICAgICAgICAgcHVudG9QYXJ0aWRhLFxyXG4gICAgICAgICAgICAgICAganVlZ29LYXBsYXkuY2VudGVyKCkueSAvIDIgKyBwdW50b1BhcnRpZGFZXHJcbiAgICAgICAgICAgICAgKSxcclxuICAgICAgICAgICAgICBqdWVnb0thcGxheS5zcHJpdGUoXCJub3Rhc1wiKSxcclxuICAgICAgICAgICAgICBqdWVnb0thcGxheS5zY2FsZSgwLjEpLFxyXG4gICAgICAgICAgICAgIHsgejogMiB9LFxyXG4gICAgICAgICAgICAgIFwibm90YXNcIlxyXG4gICAgICAgICAgICBdKTtcclxuICAgICAgICAgICAgbnVldm9TcHJpdGUuZnJhbWUgPSAwO1xyXG4gICAgICAgICAgICBwdW50b1BhcnRpZGEgKz0gNzA7XHJcbiAgICAgICAgICAgIGp1ZWdvS2FwbGF5LnBsYXkoXCJBMFwiLCB7IHZvbHVtZTogMSwgc3BlZWQ6IDEsIGxvb3A6IGZhbHNlIH0pO1xyXG4gICAgICAgICAgICBicmVhaztcclxuXHJcbiAgICAgICAgICBjYXNlIDE6XHJcbiAgICAgICAgICAgIG51ZXZvU3ByaXRlID0ganVlZ29LYXBsYXkuYWRkKFtcclxuICAgICAgICAgICAgICBqdWVnb0thcGxheS5wb3MoXHJcbiAgICAgICAgICAgICAgICBwdW50b1BhcnRpZGEsXHJcbiAgICAgICAgICAgICAgICBqdWVnb0thcGxheS5jZW50ZXIoKS55IC8gMiArIHB1bnRvUGFydGlkYVlcclxuICAgICAgICAgICAgICApLFxyXG4gICAgICAgICAgICAgIGp1ZWdvS2FwbGF5LnNwcml0ZShcIm5vdGFzXCIpLFxyXG4gICAgICAgICAgICAgIGp1ZWdvS2FwbGF5LnNjYWxlKDAuMSksXHJcbiAgICAgICAgICAgICAgeyB6OiAyIH0sXHJcbiAgICAgICAgICAgICAgXCJub3Rhc1wiXHJcbiAgICAgICAgICAgIF0pO1xyXG4gICAgICAgICAgICBudWV2b1Nwcml0ZS5mcmFtZSA9IDE7XHJcbiAgICAgICAgICAgIHB1bnRvUGFydGlkYSArPSA3MDtcclxuICAgICAgICAgICAganVlZ29LYXBsYXkucGxheShcIkExXCIsIHsgdm9sdW1lOiAxLCBzcGVlZDogMSwgbG9vcDogZmFsc2UgfSk7XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG5cclxuICAgICAgICAgIGNhc2UgMjpcclxuICAgICAgICAgICAgbnVldm9TcHJpdGUgPSBqdWVnb0thcGxheS5hZGQoW1xyXG4gICAgICAgICAgICAgIGp1ZWdvS2FwbGF5LnBvcyhcclxuICAgICAgICAgICAgICAgIHB1bnRvUGFydGlkYSxcclxuICAgICAgICAgICAgICAgIGp1ZWdvS2FwbGF5LmNlbnRlcigpLnkgLyAyICsgcHVudG9QYXJ0aWRhWVxyXG4gICAgICAgICAgICAgICksXHJcbiAgICAgICAgICAgICAganVlZ29LYXBsYXkuc3ByaXRlKFwibm90YXNcIiksXHJcbiAgICAgICAgICAgICAganVlZ29LYXBsYXkuc2NhbGUoMC4xKSxcclxuICAgICAgICAgICAgICB7IHo6IDIgfSxcclxuICAgICAgICAgICAgICBcIm5vdGFzXCJcclxuICAgICAgICAgICAgXSk7XHJcbiAgICAgICAgICAgIG51ZXZvU3ByaXRlLmZyYW1lID0gMjtcclxuICAgICAgICAgICAgcHVudG9QYXJ0aWRhICs9IDcwO1xyXG4gICAgICAgICAgICBqdWVnb0thcGxheS5wbGF5KFwiQTJcIiwgeyB2b2x1bWU6IDEsIHNwZWVkOiAxLCBsb29wOiBmYWxzZSB9KTtcclxuICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvLyBBZ3JlZ2EgZWwgc3ByaXRlIGFsIGFycmF5IHBhcmEgcmFzdHJlYXIgdG9kb3MgbG9zIHNwcml0ZXMgY3JlYWRvc1xyXG4gICAgICAgIGlmIChudWV2b1Nwcml0ZSkge1xyXG4gICAgICAgICAgc3ByaXRlc05vdGFzLnB1c2gobnVldm9TcHJpdGUpO1xyXG4gICAgICAgIH1cclxuICAgICAgfSwgZGVsYXkpO1xyXG5cclxuICAgICAgZGVsYXkgKz0gMTAwMDsgLy8gSW5jcmVtZW50YXIgZWwgcmV0cmFzbyBwYXJhIGVsIHNpZ3VpZW50ZSBzcHJpdGVcclxuICAgIH0pO1xyXG5cclxuICAgIHJldHVybiB1bHRpbW87IC8vIFJldG9ybmEgZWwgw7psdGltbyB2YWxvciBkZWwgcGF0csOzblxyXG4gIH1cclxuXHJcblxyXG4gICAgICAgIGxldCB1bHRpbW8gPSBwYXRyb25lc2RpbmFtaWNvcygpO1xyXG4gICAgICAgIFxyXG5cclxuICAgICAgICBjaXJjbGUxLm9uQ2xpY2soICgpID0+IHtcclxuICAgICAgICAgIGp1ZWdvS2FwbGF5LnBsYXkoXCJBMFwiLCB7XHJcbiAgICAgICAgICAgIHZvbHVtZTogMSwgXHJcbiAgICAgICAgICAgIHNwZWVkOiAxLCBcclxuICAgICAgICAgICAgbG9vcDogZmFsc2UsIFxyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgICBpZih1bHRpbW8gPT09IDEpe1xyXG5cclxuICAgICAgICAgICAgcGxheWVyLnBsYXkoXCJyaWdodFwiKTtcclxuICAgICAgICAgICAgdHJlZS5wbGF5KFwiYnllXCIpO1xyXG4gICAgICAgICAgICBhY2llcnRvcysrO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIkZhbGxhc3RlXCIpXHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICB9KVxyXG4gICAgICAgICAgY2lyY2xlMi5vbkNsaWNrKCAoKSA9PiB7XHJcbiAgICAgICAgICBqdWVnb0thcGxheS5wbGF5KFwiQTFcIiwge1xyXG4gICAgICAgICAgICB2b2x1bWU6IDEsIFxyXG4gICAgICAgICAgICBzcGVlZDogMSwgXHJcbiAgICAgICAgICAgIGxvb3A6IGZhbHNlLCBcclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgaWYodWx0aW1vID09PSAwKXtcclxuXHJcbiAgICAgICAgICAgIHBsYXllci5wbGF5KFwicmlnaHRcIik7XHJcbiAgICAgICAgICAgIHRyZWUucGxheShcImJ5ZVwiKTtcclxuICAgICAgICAgICAgYWNpZXJ0b3MrKztcclxuICAgICAgICAgICAgLy9jb25zb2xlLmxvZyhcIkVsIG1lbnNhamUgZXM6IFwiICsgYWNpZXJ0b3MpO1xyXG4gICAgICAgICAgIFxyXG4gICAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiRmFsbGFzdGVcIilcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIH0pXHJcblxyXG4gICAgICAgICAgY2lyY2xlMy5vbkNsaWNrKCAoKSA9PiB7XHJcbiAgICAgICAgICBqdWVnb0thcGxheS5wbGF5KFwiQTJcIiwge1xyXG4gICAgICAgICAgICB2b2x1bWU6IDEsIFxyXG4gICAgICAgICAgICBzcGVlZDogMSwgXHJcbiAgICAgICAgICAgIGxvb3A6IGZhbHNlLCBcclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgaWYodWx0aW1vID09PSAyKXtcclxuXHJcbiAgICAgICAgICAgIHBsYXllci5wbGF5KFwicmlnaHRcIik7XHJcbiAgICAgICAgICAgIHRyZWUucGxheShcImJ5ZVwiKTtcclxuICAgICAgICAgICAgYWNpZXJ0b3MrKztcclxuICAgICAgICAgICAgLy9jb25zb2xlLmxvZyhcIkVsIG1lbnNhamUgZXM6IFwiICsgYWNpZXJ0b3MpO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIkZhbGxhc3RlXCIpXHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICB9KVxyXG5cclxuICAgICAgICAgIGp1ZWdvS2FwbGF5Lm9uQ2xpY2soKCk9PntcclxuICAgICAgICAgICAgaWYoYWNpZXJ0b3M9PTEpe1xyXG4gICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgIGNvbnN0IGNhc2ExID0ganVlZ29LYXBsYXkuYWRkKFtcclxuICAgICAgICAgICAgICAgIGp1ZWdvS2FwbGF5LnBvcyg0MDAsLTUpLFxyXG4gICAgICAgICAgICAgICAganVlZ29LYXBsYXkuc3ByaXRlKFwiY2FzYTFcIiksXHJcbiAgICAgICAgICAgICAgICBqdWVnb0thcGxheS5zY2FsZSgwLjgpLFxyXG4gICAgICAgICAgICAgICAganVlZ29LYXBsYXkuaGVhbHRoKDMpLFxyXG4gICAgICAgICAgICAgICAganVlZ29LYXBsYXkuYXJlYSgpLFxyXG4gICAgICAgICAgICAgICAgXCJjYXNhXCIsXHJcbiAgICAgICAgICAgICAgICB7IHo6IDEgfSAvLyBBc2VndXJhIHF1ZSBlbCBqdWdhZG9yIGVzdMOpIGVuIHVuYSBjYXBhIHN1cGVyaW9yXHJcbiAgICAgICAgICAgICAgXSk7XHJcbiAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJFbCBtZW5zYWplIGVzOiBcIiArIGFjaWVydG9zKTtcclxuICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICBwYXRyb25lc2RpbmFtaWNvcygpO1xyXG4gIFxyXG4gICAgICAgICAgICB9ZWxzZSBpZihhY2llcnRvcz09Mil7XHJcbiAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgY29uc3QgY2FzYTIgPSBqdWVnb0thcGxheS5hZGQoW1xyXG4gICAgICAgICAgICAgICAganVlZ29LYXBsYXkucG9zKDQwMCwtNSksXHJcbiAgICAgICAgICAgICAgICBqdWVnb0thcGxheS5zcHJpdGUoXCJjYXNhMlwiKSxcclxuICAgICAgICAgICAgICAgIGp1ZWdvS2FwbGF5LnNjYWxlKDAuOCksXHJcbiAgICAgICAgICAgICAgICBqdWVnb0thcGxheS5oZWFsdGgoMyksXHJcbiAgICAgICAgICAgICAgICBqdWVnb0thcGxheS5hcmVhKCksXHJcbiAgICAgICAgICAgICAgICBcImNhc2FcIixcclxuICAgICAgICAgICAgICAgIHsgejogMSB9IC8vIEFzZWd1cmEgcXVlIGVsIGp1Z2Fkb3IgZXN0w6kgZW4gdW5hIGNhcGEgc3VwZXJpb3JcclxuICAgICAgICAgICAgICBdKTtcclxuICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIkVsIG1lbnNhamUgZXM6IFwiICsgYWNpZXJ0b3MpO1xyXG4gICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgIHBhdHJvbmVzZGluYW1pY29zKCk7XHJcbiAgXHJcbiAgICAgICAgICAgIH1lbHNlIGlmKGFjaWVydG9zPT0zKXtcclxuICAgICAgICAgICAgICBjb25zdCBjYXNhMyA9IGp1ZWdvS2FwbGF5LmFkZChbXHJcbiAgICAgICAgICAgICAgICBqdWVnb0thcGxheS5wb3MoNDAwLC01KSxcclxuICAgICAgICAgICAgICAgIGp1ZWdvS2FwbGF5LnNwcml0ZShcImNhc2EzXCIpLFxyXG4gICAgICAgICAgICAgICAganVlZ29LYXBsYXkuc2NhbGUoMC44KSxcclxuICAgICAgICAgICAgICAgIGp1ZWdvS2FwbGF5LmhlYWx0aCgzKSxcclxuICAgICAgICAgICAgICAgIGp1ZWdvS2FwbGF5LmFyZWEoKSxcclxuICAgICAgICAgICAgICAgIFwiY2FzYVwiLFxyXG4gICAgICAgICAgICAgICAgeyB6OiAxIH0gLy8gQXNlZ3VyYSBxdWUgZWwganVnYWRvciBlc3TDqSBlbiB1bmEgY2FwYSBzdXBlcmlvclxyXG4gICAgICAgICAgICAgIF0pO1xyXG4gICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiRWwgbWVuc2FqZSBlczogXCIgKyBhY2llcnRvcyk7XHJcbiAgICAgICAgICAgICAgLy9wYXRyb25lc2RpbmFtaWNvcygpLmNsZWFyO1xyXG4gICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgIHBhdHJvbmVzZGluYW1pY29zKCk7XHJcbiAgXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH0pXHJcbiAgICAgICAgIFxyXG5cclxuICAgICAgICAgIHBsYXllci5vbkRlYXRoKCgpID0+IHtcclxuICAgICAgICAgICAganVlZ29LYXBsYXkuZGVzdHJveShwbGF5ZXIpO1xyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgfVxyXG4gICAgICAgICAgKS5jYXRjaChcclxuICAgICAgICAgICAgKChlcnJvcjphbnkpID0+IHtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICApICAgXHJcbiAgXHJcbiAgXHJcbiAgICAgICAgfSkgLy9GaW4gLSBPbmxvYWQoKVxyXG4gIFxyXG4gICAgLy9yZXR1cm4gPGNhbnZhcyBpZD1cImdhbWVcIiBzdHlsZT17eyB3aWR0aDogXCIxMDB2d1wiLCBoZWlnaHQ6IFwiMTAwdmhcIiB9fSAvPjs7XHJcbiAgfVxyXG5cclxuXHJcbiJdLCJuYW1lcyI6WyJnZW5lcmFyRXNxdWVtYU1hcGEiLCJnZW5lcmFyTnVtZXJvc0F6YXIiLCJTQ1JFRU5fUkVTT0xVVElPTl9YIiwid2luZG93IiwiaW5uZXJXaWR0aCIsIlNDUkVFTl9SRVNPTFVUSU9OX1kiLCJpbm5lckhlaWdodCIsIlRJTEVEX01BUF9fV0lEVEhfTlVNQkVSIiwiVElMRURfTUFQX0hFSUdIVF9OVU1CRVIiLCJUSUxFRF9XSURUSCIsIlRJTEVEX0hFSUdIVCIsImFjaWVydG9zIiwibnVldm9TcHJpdGUiLCJjYW1iaW9OaXZlbCIsIk5pdmVsMSIsImp1ZWdvS2FwbGF5IiwibG9hZFNwcml0ZSIsInNsaWNlWCIsInNsaWNlWSIsImFuaW1zIiwicmlnaHQiLCJmcm9tIiwidG8iLCJsb29wIiwicXVpZXQiLCJieWUiLCJzZW1pY29yY2hlYTEiLCJzZW1pY29yY2hlYTIiLCJzZW1pY29yY2hlYTMiLCJsb2FkU291bmQiLCJQMSIsImZvckVhY2giLCJkaXIiLCJvbkxvYWQiLCJuaXZlbFByaW5jaXBhbCIsIm5hbWVGb2xkZXIiLCJuYW1lRmlsZSIsInRpbGVXaWR0aCIsInRpbGVIZWlnaHQiLCJwb3MiLCJ2ZWMyIiwidXJsVGV4dHVyYSIsImRpbWVuc2lvblRleHR1cmFzWCIsImRpbWVuc2lvblRleHR1cmFzWSIsImZpcnN0Z2lkIiwidGhlbiIsInJlc3VsdGFkbyIsInBsYXllciIsImFkZCIsInNwcml0ZSIsInNjYWxlIiwiaGVhbHRoIiwiYXJlYSIsInoiLCJ0cmVlIiwiYXJyb3dzIiwidXAiLCJjZW50ZXIiLCJ5IiwiZG93biIsImxlZnQiLCJ2ZWxvY2lkYWQiLCJvbktleURvd24iLCJtb3ZlIiwib25DbGljayIsInBsYXkiLCJjaXJjbGUxIiwieCIsImZyYW1lIiwiY2lyY2xlMiIsImNpcmNsZTMiLCJwdW50b1BhcnRpZGEiLCJwdW50b1BhcnRpZGFZIiwic3ByaXRlc05vdGFzIiwibGltcGlhck5vdGFzIiwiZ2V0IiwiY29uc29sZSIsImxvZyIsImRlc3Ryb3kiLCJwYXRyb25lc2RpbmFtaWNvcyIsInBhdHJvbmVzIiwiZGVsYXkiLCJudW1lcm9zIiwidWx0aW1vIiwibGVuZ3RoIiwic2xpY2UiLCJudW1lcm9BemFyIiwic2V0VGltZW91dCIsInZvbHVtZSIsInNwZWVkIiwicHVzaCIsImNhc2ExIiwiY2FzYTIiLCJjYXNhMyIsIm9uRGVhdGgiLCJjYXRjaCIsImVycm9yIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/videojuego/1stLevel.tsx\n"));

/***/ })

});