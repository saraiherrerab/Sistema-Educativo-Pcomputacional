"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/videojuego/page",{

/***/ "(app-pages-browser)/./src/app/videojuego/2ndLevel.tsx":
/*!*****************************************!*\
  !*** ./src/app/videojuego/2ndLevel.tsx ***!
  \*****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Nivel2: () => (/* binding */ Nivel2)\n/* harmony export */ });\n/* harmony import */ var _MapsGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../MapsGenerator */ \"(app-pages-browser)/./src/MapsGenerator.tsx\");\n\nfunction Nivel2(juegoKaplay) {\n    const SCREEN_RESOLUTION_X = window.innerWidth;\n    const SCREEN_RESOLUTION_Y = window.innerHeight;\n    const TILED_MAP__WIDTH_NUMBER = 21;\n    const TILED_MAP_HEIGHT_NUMBER = 16;\n    const TILED_WIDTH = SCREEN_RESOLUTION_X / TILED_MAP__WIDTH_NUMBER;\n    const TILED_HEIGHT = SCREEN_RESOLUTION_Y / TILED_MAP_HEIGHT_NUMBER;\n    const ORIGINAL_GAME_SCREEN_X = TILED_MAP__WIDTH_NUMBER * 32;\n    const ORIGINAL_GAME_SCREEN_Y = TILED_MAP_HEIGHT_NUMBER * 32;\n    console.log(\"Comenzando a generar nivel 2\");\n    console.log(juegoKaplay.get(\"*\"));\n    let lives = 3;\n    juegoKaplay.loadSprite(\"robot\", \"sprites/robotin.png\", {\n        sliceX: 4,\n        sliceY: 12,\n        anims: {\n            right: {\n                from: 16,\n                to: 19,\n                loop: false\n            },\n            up: {\n                from: 20,\n                to: 23,\n                loop: false\n            },\n            down: {\n                from: 12,\n                to: 15,\n                loop: false\n            },\n            left: {\n                from: 24,\n                to: 27,\n                loop: false\n            },\n            quiet: {\n                from: 0,\n                to: 0,\n                loop: false\n            }\n        }\n    });\n    juegoKaplay.loadSprite(\"knight\", \"sprites/p_knight_official.png\", {\n        sliceX: 6,\n        sliceY: 8,\n        anims: {\n            right: {\n                from: 6,\n                to: 11,\n                loop: false\n            },\n            up: {\n                from: 36,\n                to: 38,\n                loop: false\n            },\n            down: {\n                from: 24,\n                to: 26,\n                loop: false\n            },\n            left: {\n                from: 5,\n                to: 1,\n                loop: false\n            },\n            quiet: {\n                from: 31,\n                to: 31,\n                loop: false\n            }\n        }\n    });\n    juegoKaplay.loadSprite(\"enemy\", \"sprites/TNT_Blue (1).png\", {\n        sliceX: 7,\n        sliceY: 3,\n        anims: {\n            left_a: {\n                from: 20,\n                to: 14,\n                loop: false\n            },\n            right_a: {\n                from: 7,\n                to: 13,\n                loop: false\n            },\n            quiet: {\n                from: 0,\n                to: 0,\n                loop: false\n            }\n        }\n    });\n    juegoKaplay.loadSprite(\"scarecrow\", \"sprites/scarecrow.png\", {\n        sliceX: 1,\n        sliceY: 1\n    });\n    juegoKaplay.loadSprite(\"heart\", \"sprites/heart.png\", {\n        sliceX: 1,\n        sliceY: 1\n    });\n    juegoKaplay.loadSprite(\"title-0\", \"prueba/title-0.png\", {\n        sliceX: 1,\n        sliceY: 1\n    });\n    // Cargar sprites adicionales\n    [\n        \"up\",\n        \"down\",\n        \"left\",\n        \"right\"\n    ].forEach((dir)=>{\n        juegoKaplay.loadSprite(dir, \"sprites/\".concat(dir, \"-arrow.png\"));\n    });\n    juegoKaplay.loadSprite(\"redbox\", \"red-border-box.png\");\n    juegoKaplay.onLoad(async ()=>{\n        (0,_MapsGenerator__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(juegoKaplay, {\n            nameFolder: \"nivel1\",\n            nameFile: \"nivel1_mapeo.png\",\n            tileWidth: TILED_WIDTH,\n            tileHeight: TILED_HEIGHT,\n            pos: juegoKaplay.vec2(0, 0)\n        }, \"./nivel1/nivel1_mapeo.json\", [\n            {\n                urlTextura: \"./nivel1/Water.png\",\n                dimensionTexturasX: 2,\n                dimensionTexturasY: 2,\n                firstgid: 1\n            },\n            {\n                urlTextura: \"./nivel1/Tilemap_Flat.png\",\n                dimensionTexturasX: 20,\n                dimensionTexturasY: 8,\n                firstgid: 5\n            },\n            {\n                urlTextura: \"./nivel1/Tilemap_Elevation.png\",\n                dimensionTexturasX: 8,\n                dimensionTexturasY: 16,\n                firstgid: 165\n            },\n            {\n                urlTextura: \"./nivel1/Tilemap_Flat.png\",\n                dimensionTexturasX: 20,\n                dimensionTexturasY: 8,\n                firstgid: 5\n            },\n            {\n                urlTextura: \"./nivel1/Tilemap_Flat.png\",\n                dimensionTexturasX: 20,\n                dimensionTexturasY: 8,\n                firstgid: 5\n            },\n            {\n                urlTextura: \"./nivel1/Bridge_All.png\",\n                dimensionTexturasX: 6,\n                dimensionTexturasY: 8,\n                firstgid: 293\n            },\n            {\n                urlTextura: \"./nivel1/Rocks_01.png\",\n                dimensionTexturasX: 32,\n                dimensionTexturasY: 4,\n                firstgid: 341\n            },\n            {\n                urlTextura: \"./nivel1/Rocks_04.png\",\n                dimensionTexturasX: 32,\n                dimensionTexturasY: 4,\n                firstgid: 469\n            },\n            {\n                urlTextura: \"./nivel1/Foam.png\",\n                dimensionTexturasX: 48,\n                dimensionTexturasY: 6,\n                firstgid: 597\n            }\n        ]).then((resultado)=>{\n            console.log(\"Resultado de generar nivel 2\");\n            console.log(juegoKaplay.get(\"*\"));\n            console.log(juegoKaplay.get(\"player\"));\n            const player = juegoKaplay.get(\"player\")[0];\n            const enemy = juegoKaplay.get(\"enemy\")[0];\n            const redRoom = juegoKaplay.add([\n                juegoKaplay.rect(200, 500),\n                juegoKaplay.area(),\n                juegoKaplay.color(255, 0, 0),\n                juegoKaplay.pos(1920 - 200, juegoKaplay.center().y - 250),\n                \"redRoom\",\n                {\n                    z: 10\n                } // Asegura que el jugador esté en una capa superior\n            ]);\n            // Enemigo zone\n            const square = juegoKaplay.add([\n                juegoKaplay.pos(1090, -110),\n                juegoKaplay.scale(2),\n                juegoKaplay.area({\n                    shape: new juegoKaplay.Rect(juegoKaplay.vec2(50, 80), 50, 30)\n                }),\n                \"square\",\n                {\n                    z: 10\n                } // Asegura que el jugador esté en una capa superior\n            ]);\n            // Enemigo zone\n            const square1 = juegoKaplay.add([\n                juegoKaplay.pos(950, -110),\n                juegoKaplay.scale(2),\n                juegoKaplay.area({\n                    shape: new juegoKaplay.Rect(juegoKaplay.vec2(50, 80), 50, 30)\n                }),\n                \"square\",\n                {\n                    z: 10\n                } // Asegura que el jugador esté en una capa superior\n            ]);\n            const live1 = juegoKaplay.add([\n                juegoKaplay.pos(220, 20),\n                juegoKaplay.sprite(\"heart\"),\n                juegoKaplay.scale(4),\n                juegoKaplay.area({\n                    shape: new juegoKaplay.Rect(juegoKaplay.vec2(10, 5), 15, 20)\n                }),\n                juegoKaplay.body(),\n                \"heart1\",\n                {\n                    z: 10\n                } // Asegura que el jugador esté en una capa superior\n            ]);\n            const live2 = juegoKaplay.add([\n                juegoKaplay.pos(350, 20),\n                juegoKaplay.sprite(\"heart\"),\n                juegoKaplay.scale(4),\n                juegoKaplay.area({\n                    shape: new juegoKaplay.Rect(juegoKaplay.vec2(10, 5), 15, 20)\n                }),\n                juegoKaplay.body(),\n                \"heart2\",\n                {\n                    z: 10\n                } // Asegura que el jugador esté en una capa superior\n            ]);\n            const live3 = juegoKaplay.add([\n                juegoKaplay.pos(480, 20),\n                juegoKaplay.sprite(\"heart\"),\n                juegoKaplay.scale(4),\n                juegoKaplay.area({\n                    shape: new juegoKaplay.Rect(juegoKaplay.vec2(10, 5), 15, 20)\n                }),\n                juegoKaplay.body(),\n                \"heart3\",\n                {\n                    z: 10\n                } // Asegura que el jugador esté en una capa superior\n            ]);\n            /*\r\n                  //Scarecrow\r\n                  const scarecrow = juegoKaplay.add([\r\n                    juegoKaplay.pos(juegoKaplay.center()),\r\n                    juegoKaplay.sprite(\"scarecrow\"),\r\n                    juegoKaplay.scale(2),\r\n                    juegoKaplay.area(),\r\n                    juegoKaplay.body(),\r\n                    \"scarecrow\",\r\n                    { z: 10 } // Asegura que el jugador esté en una capa superior\r\n                  ]);\r\n                  */ // Flechas\n            const arrows = {\n                up: juegoKaplay.add([\n                    juegoKaplay.pos(0, juegoKaplay.center().y / 8),\n                    juegoKaplay.sprite(\"up\"),\n                    juegoKaplay.scale(2),\n                    juegoKaplay.area(),\n                    {\n                        z: 10\n                    } // Asegura que el jugador esté en una capa superior\n                ]),\n                down: juegoKaplay.add([\n                    juegoKaplay.pos(0, juegoKaplay.center().y / 4),\n                    juegoKaplay.sprite(\"down\"),\n                    juegoKaplay.scale(2),\n                    juegoKaplay.area(),\n                    {\n                        z: 10\n                    } // Asegura que el jugador esté en una capa superior\n                ]),\n                left: juegoKaplay.add([\n                    juegoKaplay.pos(0, juegoKaplay.center().y / 2),\n                    juegoKaplay.sprite(\"left\"),\n                    juegoKaplay.scale(2),\n                    juegoKaplay.area(),\n                    {\n                        z: 10\n                    } // Asegura que el jugador esté en una capa superior\n                ]),\n                right: juegoKaplay.add([\n                    juegoKaplay.pos(0, juegoKaplay.center().y),\n                    juegoKaplay.sprite(\"right\"),\n                    juegoKaplay.scale(2),\n                    juegoKaplay.area(),\n                    {\n                        z: 10\n                    } // Asegura que el jugador esté en una capa superior\n                ])\n            };\n            const velocidad = 1500;\n            // Movimiento con teclado\n            juegoKaplay.onKeyDown(\"w\", ()=>{\n                player.move(0, -velocidad);\n            });\n            juegoKaplay.onKeyDown(\"s\", ()=>{\n                player.move(0, velocidad);\n            });\n            juegoKaplay.onKeyDown(\"a\", ()=>{\n                player.move(-velocidad, 0);\n            });\n            juegoKaplay.onKeyDown(\"d\", ()=>{\n                player.move(velocidad, 0);\n            });\n            // Movimiento con clic\n            arrows.up.onClick(()=>{\n                player.move(0, -velocidad);\n                player.play(\"up\");\n            });\n            arrows.down.onClick(()=>{\n                player.move(0, velocidad);\n                player.play(\"down\");\n            });\n            arrows.left.onClick(()=>{\n                player.move(-velocidad, 0);\n                player.play(\"left\");\n            });\n            arrows.right.onClick(()=>{\n                player.move(velocidad, 0);\n                player.play(\"right\");\n            });\n            enemy.play(\"quiet\");\n            // Colisión con el enemigo\n            enemy.onCollide(\"player\", (jugador)=>{\n                setTimeout(()=>{\n                    jugador.hurt(1);\n                    juegoKaplay.debug.log(\"¡ouch!\");\n                    lives--;\n                    juegoKaplay.debug.log(\"Han pasado dos segundos\");\n                }, 100); // Espera 2000 milisegundos (2 segundos)\n            });\n            // Colisión con zona enemiga\n            square.onCollide(\"player\", (jugador)=>{\n                setTimeout(()=>{\n                    jugador.hurt(1);\n                    lives--;\n                    juegoKaplay.debug.log(\"¡ouch!\");\n                    enemy.play(\"right_a\");\n                    jugador.move(6500, 0);\n                    juegoKaplay.debug.log(\"Han pasado dos segundos\");\n                }, 100); // Espera 2000 milisegundos (2 segundos)\n            });\n            // Colisión con zona enemiga\n            square1.onCollide(\"player\", (jugador)=>{\n                setTimeout(()=>{\n                    jugador.hurt(1);\n                    juegoKaplay.debug.log(\"¡ouch!\");\n                    enemy.play(\"left_a\");\n                    jugador.move(-6500, 0);\n                    lives--;\n                    juegoKaplay.debug.log(\"Han pasado dos segundos\");\n                }, 100);\n            });\n            // Intentando eliminar las vidas\n            juegoKaplay.onUpdate(()=>{\n                if (lives == 3) {\n                    juegoKaplay.destroy(live1);\n                } else if (lives == 2) {\n                    juegoKaplay.destroy(live2);\n                } else if (lives == 1) {\n                    juegoKaplay.destroy(live3);\n                }\n                ;\n            });\n            player.onDeath(()=>{\n                juegoKaplay.destroy(player);\n            });\n            console.log(\"IMPRIMIENDO COORDENADAS DE BORDE\");\n            console.log({\n                1: {\n                    x: redRoom.pos.x,\n                    y: 0\n                },\n                2: {\n                    x: redRoom.pos.x + redRoom.width,\n                    y: 0\n                },\n                3: {\n                    x: 0,\n                    y: redRoom.pos.y + redRoom.height\n                },\n                4: {\n                    x: redRoom.pos.x + redRoom.width,\n                    y: redRoom.pos.y + redRoom.height\n                }\n            });\n            console.log(\"IMPRIMIENDO COORDENADAS DE JUGADOR\");\n            console.log({\n                1: {\n                    x: player.pos.x,\n                    y: 0\n                },\n                2: {\n                    x: player.pos.x + player.width,\n                    y: 0\n                },\n                3: {\n                    x: 0,\n                    y: player.pos.y + player.height\n                },\n                4: {\n                    x: player.pos.x + player.width,\n                    y: player.pos.y + player.height\n                }\n            });\n            player.onCollide(\"redRoom\", (redRoom)=>{\n                console.log(\"SIGUIENTE NIVEl\");\n                juegoKaplay.tween(juegoKaplay.camPos().x, redRoom.pos.x + redRoom.width + 1920 / 2, 1, (value)=>juegoKaplay.camPos(value, juegoKaplay.camPos().y), juegoKaplay.easings.linear);\n            });\n        /*\r\n                  player.onCollide(\"blueRoom\", (blueRoom:any) => {\r\n                    juegoKaplay.tween(\r\n                      juegoKaplay.camPos().x, \r\n                          blueRoom.pos.x, \r\n                          1, \r\n                          (value:any) => juegoKaplay.camPos(value, juegoKaplay.camPos().y), \r\n                          juegoKaplay.easings.linear\r\n                    )\r\n                  })\r\n                  */ }).catch((error)=>{\n            console.log(\"Ah vaina simon\");\n        });\n    }) //Fin - Onload()\n    ;\n/*\r\n        juegoKaplay.onUpdate(() => {\r\n            const camX = juegoKaplay.camPos().x;\r\n            const camY = juegoKaplay.camPos().y;\r\n        \r\n            juegoKaplay.getAll().forEach((obj:any) => {\r\n                if (\r\n                    obj.pos.x < camX - 1920 || obj.pos.x > camX + 1920 ||\r\n                    obj.pos.y < camY - 1080 || obj.pos.y > camY + 1080\r\n                ) {\r\n                    obj.hidden = true;  // No dibujar objetos fuera del área visible\r\n                } else {\r\n                    obj.hidden = false;\r\n                }\r\n            });\r\n        });    \r\n        */ //return <canvas id=\"game\" style={{ width: \"100vw\", height: \"100vh\" }} />;;\n} /*\r\n\r\n  */ \n_c = Nivel2;\nvar _c;\n$RefreshReg$(_c, \"Nivel2\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/videojuego/2ndLevel.tsx\n"));

/***/ })

});