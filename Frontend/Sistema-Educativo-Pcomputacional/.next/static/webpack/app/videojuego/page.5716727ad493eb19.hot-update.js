"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/videojuego/page",{

/***/ "(app-pages-browser)/./src/app/videojuego/1stLevel.tsx":
/*!*****************************************!*\
  !*** ./src/app/videojuego/1stLevel.tsx ***!
  \*****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Nivel1: () => (/* binding */ Nivel1),\n/* harmony export */   cambioNivel: () => (/* binding */ cambioNivel)\n/* harmony export */ });\n/* harmony import */ var _MapsGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../MapsGenerator */ \"(app-pages-browser)/./src/MapsGenerator.tsx\");\n/* harmony import */ var _utils_generarNumerosAzar__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/generarNumerosAzar */ \"(app-pages-browser)/./src/utils/generarNumerosAzar.ts\");\n\n\n//import './styles.css';\nconst SCREEN_RESOLUTION_X = window.innerWidth;\nconst SCREEN_RESOLUTION_Y = window.innerHeight;\nconst TILED_MAP__WIDTH_NUMBER = 21;\nconst TILED_MAP_HEIGHT_NUMBER = 16;\nconst TILED_WIDTH = SCREEN_RESOLUTION_X / TILED_MAP__WIDTH_NUMBER;\nconst TILED_HEIGHT = SCREEN_RESOLUTION_Y / TILED_MAP_HEIGHT_NUMBER;\nlet aciertos = 0;\nlet nuevoSprite;\nlet cambioNivel = 0;\nfunction Nivel1(juegoKaplay, setState, cambiarGanar, Router) {\n    // Referencia persistente para almacenar la instancia de Kaplay\n    // setState(false);\n    juegoKaplay.loadSprite(\"casa3\", \"sprites/buildings/House_Blue.png\", {\n        sliceX: 1,\n        sliceY: 1\n    });\n    juegoKaplay.loadSprite(\"casa2\", \"sprites/buildings/House_Destroyed.png\", {\n        sliceX: 1,\n        sliceY: 1\n    });\n    juegoKaplay.loadSprite(\"casa1\", \"sprites/buildings/House_Construction.png\", {\n        sliceX: 1,\n        sliceY: 1\n    });\n    juegoKaplay.loadSprite(\"House_Blue\", \"sprites/buildings/House_Blue.png\", {\n        sliceX: 1,\n        sliceY: 1\n    });\n    juegoKaplay.loadSprite(\"Tower_Blue\", \"sprites/buildings/Tower_Blue.png\", {\n        sliceX: 1,\n        sliceY: 1\n    });\n    juegoKaplay.loadSprite(\"pawn\", \"sprites/characters/Pawn_Purple.png\", {\n        sliceX: 6,\n        sliceY: 6,\n        anims: {\n            right: {\n                from: 18,\n                to: 23,\n                loop: false\n            },\n            quiet: {\n                from: 0,\n                to: 0,\n                loop: false\n            }\n        }\n    });\n    juegoKaplay.loadSprite(\"tree\", \"sprites/deco/Tree.png\", {\n        sliceX: 4,\n        sliceY: 3,\n        anims: {\n            bye: {\n                from: 8,\n                to: 8,\n                loop: false\n            },\n            quiet: {\n                from: 0,\n                to: 3,\n                loop: true\n            }\n        }\n    });\n    juegoKaplay.loadSprite(\"heart\", \"sprites/heart.png\", {\n        sliceX: 1,\n        sliceY: 1\n    });\n    juegoKaplay.loadSprite(\"title-0\", \"prueba/title-0.png\", {\n        sliceX: 1,\n        sliceY: 1\n    });\n    juegoKaplay.loadSprite(\"notas\", \"nivel2/notas_musicales.png\", {\n        sliceX: 3,\n        sliceY: 1\n    });\n    juegoKaplay.loadSprite(\"notas_circulo\", \"nivel2/notas_musicales_con_circulo.png\", {\n        sliceX: 3,\n        sliceY: 1\n    });\n    let semicorchea1;\n    let semicorchea2;\n    let semicorchea3;\n    juegoKaplay.loadSound(\"sonidoPrueba\", \"button_09-190435.mp3\");\n    const P1 = juegoKaplay.loadSound(\"P1\", \"./sounds/P1.mp3\");\n    juegoKaplay.loadSound(\"P2\", \"./sounds/P2.mp3\");\n    juegoKaplay.loadSound(\"P3\", \"./sounds/P3.mp3\");\n    juegoKaplay.loadSound(\"P4\", \"./sounds/P4.mp3\");\n    juegoKaplay.loadSound(\"P5\", \"./sounds/P5.mp3\");\n    juegoKaplay.loadSound(\"P6\", \"./sounds/P6.mp3\");\n    juegoKaplay.loadSound(\"A0\", \"./sounds/A0.mp3\");\n    juegoKaplay.loadSound(\"A1\", \"./sounds/A1.mp3\");\n    juegoKaplay.loadSound(\"A2\", \"./sounds/A2.mp3\");\n    juegoKaplay.loadSprite(\"redbox\", \"red-border-box.png\");\n    juegoKaplay.onLoad(async ()=>{\n        //Practicando aqui\n        const nivelPrincipal = (0,_MapsGenerator__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(juegoKaplay, {\n            nameFolder: \"nivel2\",\n            nameFile: \"prueba3.png\",\n            tileWidth: TILED_WIDTH,\n            tileHeight: TILED_HEIGHT,\n            pos: juegoKaplay.vec2(0, 0)\n        }, \"./fondomusical.json\", [\n            {\n                urlTextura: \"./nivel2/Water.png\",\n                dimensionTexturasX: 2,\n                dimensionTexturasY: 2,\n                firstgid: 1 //orden en el que tiled extrae esas imagenes (esta llega a cuatro)\n            },\n            {\n                urlTextura: \"./nivel2/Tilemap_Flat.png\",\n                dimensionTexturasX: 20,\n                dimensionTexturasY: 8,\n                firstgid: 5 //(esta comienza en 5)\n            },\n            {\n                urlTextura: \"./nivel2/Tilemap_Elevation.png\",\n                dimensionTexturasX: 8,\n                dimensionTexturasY: 16,\n                firstgid: 165\n            },\n            {\n                urlTextura: \"./nivel2/Tilemap_Flat.png\",\n                dimensionTexturasX: 20,\n                dimensionTexturasY: 8,\n                firstgid: 5 //(esta comienza en 5)\n            }\n        ]).then((resultado)=>{\n            // Jugador\n            const player = juegoKaplay.add([\n                juegoKaplay.pos(730, 5),\n                juegoKaplay.sprite(\"pawn\"),\n                juegoKaplay.scale(1),\n                juegoKaplay.health(3),\n                juegoKaplay.area(),\n                \"player\",\n                {\n                    z: 1\n                } // Asegura que el jugador esté en una capa superior\n            ]);\n            const tree = juegoKaplay.add([\n                juegoKaplay.pos(810, -5),\n                juegoKaplay.sprite(\"tree\"),\n                juegoKaplay.scale(0.8),\n                juegoKaplay.health(3),\n                juegoKaplay.area(),\n                \"tree\",\n                {\n                    z: 1\n                } // Asegura que el jugador esté en una capa superior\n            ]);\n            /* const casa = juegoKaplay.add([\r\n            juegoKaplay.pos(400,-5),\r\n            juegoKaplay.sprite(\"casa1\"),\r\n            juegoKaplay.scale(0.8),\r\n            juegoKaplay.health(3),\r\n            juegoKaplay.area(),\r\n            \"casa\",\r\n            { z: 1 } // Asegura que el jugador esté en una capa superior\r\n          ]);*/ const velocidad = 440;\n            const circle1 = juegoKaplay.add([\n                juegoKaplay.pos(juegoKaplay.center().x - juegoKaplay.center().x / 4, juegoKaplay.center().y + juegoKaplay.center().y / 2 + juegoKaplay.center().y / 6),\n                juegoKaplay.sprite(\"notas_circulo\", {\n                    frame: 0\n                }),\n                juegoKaplay.area(),\n                juegoKaplay.scale(0.20),\n                {\n                    z: 1\n                }\n            ]);\n            const circle2 = juegoKaplay.add([\n                juegoKaplay.pos(juegoKaplay.center().x, juegoKaplay.center().y + juegoKaplay.center().y / 2 + juegoKaplay.center().y / 6),\n                juegoKaplay.sprite(\"notas_circulo\", {\n                    frame: 1\n                }),\n                juegoKaplay.area(),\n                juegoKaplay.scale(0.20),\n                {\n                    z: 1\n                }\n            ]);\n            const circle3 = juegoKaplay.add([\n                juegoKaplay.pos(juegoKaplay.center().x + juegoKaplay.center().x / 4, juegoKaplay.center().y + juegoKaplay.center().y / 2 + juegoKaplay.center().y / 6),\n                juegoKaplay.sprite(\"notas_circulo\", {\n                    frame: 2\n                }),\n                juegoKaplay.area(),\n                juegoKaplay.scale(0.20),\n                {\n                    z: 1\n                }\n            ]);\n            let puntoPartida = window.innerWidth / 3;\n            let puntoPartidaY = window.innerHeight / 2;\n            //let spritecito=\"\";\n            /* function clean(spritecito: any){\r\n            juegoKaplay.destroy(spritecito);\r\n          };*/ // Array para almacenar los sprites de notas creados\n            let spritesNotas = []; // Asegúrate de usar el tipo correcto para los sprites en Kaboom.js\n            function validarAciertos() {\n                if (aciertos == 1) {\n                    const casa1 = juegoKaplay.add([\n                        juegoKaplay.pos(400, -5),\n                        juegoKaplay.sprite(\"casa1\"),\n                        juegoKaplay.scale(0.8),\n                        juegoKaplay.health(3),\n                        juegoKaplay.area(),\n                        \"casa\",\n                        {\n                            z: 1\n                        } // Asegura que el jugador esté en una capa superior\n                    ]);\n                    console.log(\"El mensaje es: \" + aciertos);\n                    cambiarGanar(true);\n                    setState(true);\n                    setTimeout(()=>{\n                        setState(false);\n                    }, 2000);\n                    ultimo = patronesdinamicos();\n                } else if (aciertos == 2) {\n                    const casa2 = juegoKaplay.add([\n                        juegoKaplay.pos(400, -5),\n                        juegoKaplay.sprite(\"casa2\"),\n                        juegoKaplay.scale(0.8),\n                        juegoKaplay.health(3),\n                        juegoKaplay.area(),\n                        \"casa\",\n                        {\n                            z: 1\n                        } // Asegura que el jugador esté en una capa superior\n                    ]);\n                    console.log(\"El mensaje es: \" + aciertos);\n                    setState(true);\n                    cambiarGanar(true);\n                    setTimeout(()=>{\n                        setState(false);\n                    }, 2000);\n                    ultimo = patronesdinamicos();\n                } else if (aciertos == 3) {\n                    const casa3 = juegoKaplay.add([\n                        juegoKaplay.pos(400, -5),\n                        juegoKaplay.sprite(\"casa3\"),\n                        juegoKaplay.scale(0.8),\n                        juegoKaplay.health(3),\n                        juegoKaplay.area(),\n                        \"casa\",\n                        {\n                            z: 1\n                        } // Asegura que el jugador esté en una capa superior\n                    ]);\n                    console.log(\"El mensaje es: \" + aciertos);\n                    //patronesdinamicos().clear;\n                    setState(true);\n                    cambiarGanar(true);\n                    setTimeout(()=>{\n                        setState(false);\n                    }, 2000);\n                    setTimeout(()=>{\n                        window.location.href = window.location.href;\n                    }, 200);\n                    ultimo = patronesdinamicos();\n                }\n            }\n            ;\n            function limpiarNotas() {\n                spritesNotas = juegoKaplay.get(\"notas\");\n                console.log(spritesNotas);\n                spritesNotas.forEach((spritesNotas)=>{\n                    spritesNotas.destroy();\n                });\n                puntoPartida = window.innerWidth / 3;\n                puntoPartidaY = window.innerHeight / 2;\n            }\n            function patronesdinamicos() {\n                // Limpia los sprites de notas anteriores\n                limpiarNotas();\n                const patrones = [\n                    [\n                        0,\n                        1,\n                        2,\n                        0,\n                        1,\n                        2,\n                        0,\n                        1,\n                        2\n                    ],\n                    [\n                        0,\n                        2,\n                        0,\n                        2,\n                        0,\n                        2,\n                        0,\n                        2,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        1,\n                        1,\n                        1,\n                        2,\n                        2,\n                        2\n                    ],\n                    [\n                        1,\n                        2,\n                        0,\n                        1,\n                        2,\n                        0,\n                        1,\n                        2,\n                        0\n                    ],\n                    [\n                        2,\n                        1,\n                        0,\n                        2,\n                        1,\n                        0,\n                        2,\n                        1,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        1,\n                        1,\n                        0,\n                        0,\n                        1,\n                        1,\n                        0\n                    ]\n                ];\n                let delay = 500; // Inicializar el retraso\n                const numeros = (0,_utils_generarNumerosAzar__WEBPACK_IMPORTED_MODULE_1__[\"default\"])();\n                console.log(numeros);\n                console.log(patrones[numeros[0]]);\n                const ultimo = patrones[numeros[0]][patrones[numeros[0]].length - 1];\n                patrones[numeros[0]] = patrones[numeros[0]].slice(0, -1);\n                // Iterar sobre el patrón seleccionado\n                patrones[numeros[0]].forEach((numeroAzar)=>{\n                    setTimeout(()=>{\n                        switch(numeroAzar){\n                            case 0:\n                                nuevoSprite = juegoKaplay.add([\n                                    juegoKaplay.pos(puntoPartida, juegoKaplay.center().y / 2 + puntoPartidaY),\n                                    juegoKaplay.sprite(\"notas\"),\n                                    juegoKaplay.scale(0.1),\n                                    {\n                                        z: 2\n                                    },\n                                    \"notas\"\n                                ]);\n                                nuevoSprite.frame = 1;\n                                puntoPartida += 70;\n                                juegoKaplay.play(\"A0\", {\n                                    volume: 1,\n                                    speed: 1.5,\n                                    loop: false\n                                });\n                                break;\n                            case 1:\n                                nuevoSprite = juegoKaplay.add([\n                                    juegoKaplay.pos(puntoPartida, juegoKaplay.center().y / 2 + puntoPartidaY),\n                                    juegoKaplay.sprite(\"notas\"),\n                                    juegoKaplay.scale(0.1),\n                                    {\n                                        z: 2\n                                    },\n                                    \"notas\"\n                                ]);\n                                nuevoSprite.frame = 0;\n                                puntoPartida += 70;\n                                juegoKaplay.play(\"A1\", {\n                                    volume: 1,\n                                    speed: 1.5,\n                                    loop: false\n                                });\n                                break;\n                            case 2:\n                                nuevoSprite = juegoKaplay.add([\n                                    juegoKaplay.pos(puntoPartida, juegoKaplay.center().y / 2 + puntoPartidaY),\n                                    juegoKaplay.sprite(\"notas\"),\n                                    juegoKaplay.scale(0.1),\n                                    {\n                                        z: 2\n                                    },\n                                    \"notas\"\n                                ]);\n                                nuevoSprite.frame = 2;\n                                puntoPartida += 70;\n                                juegoKaplay.play(\"A2\", {\n                                    volume: 1,\n                                    speed: 1.5,\n                                    loop: false\n                                });\n                                break;\n                        }\n                        // Agrega el sprite al array para rastrear todos los sprites creados\n                        if (nuevoSprite) {\n                            spritesNotas.push(nuevoSprite);\n                        }\n                    }, delay);\n                    delay += 1000; // Incrementar el retraso para el siguiente sprite\n                });\n                return ultimo; // Retorna el último valor del patrón\n            }\n            let ultimo = patronesdinamicos();\n            circle1.onClick(()=>{\n                juegoKaplay.play(\"A0\", {\n                    volume: 1,\n                    speed: 1.5,\n                    loop: false\n                });\n                if (ultimo == 0) {\n                    player.play(\"right\");\n                    tree.play(\"bye\");\n                    aciertos++;\n                    validarAciertos();\n                } else {\n                    console.log(\"Fallaste\" + ultimo);\n                    setState(true);\n                    cambiarGanar(false);\n                    setTimeout(()=>{\n                        setState(false);\n                    }, 2000);\n                }\n            });\n            circle2.onClick(()=>{\n                juegoKaplay.play(\"A1\", {\n                    volume: 1,\n                    speed: 1.5,\n                    loop: false\n                });\n                if (ultimo == 1) {\n                    player.play(\"right\");\n                    tree.play(\"bye\");\n                    aciertos++;\n                    validarAciertos();\n                //console.log(\"El mensaje es: \" + aciertos);\n                } else {\n                    console.log(\"Fallaste\" + ultimo);\n                    setState(true);\n                    cambiarGanar(false);\n                    setTimeout(()=>{\n                        setState(false);\n                    }, 2000);\n                }\n            });\n            circle3.onClick(()=>{\n                juegoKaplay.play(\"A2\", {\n                    volume: 1,\n                    speed: 1.5,\n                    loop: false\n                });\n                if (ultimo == 2) {\n                    player.play(\"right\");\n                    tree.play(\"bye\");\n                    aciertos++;\n                    validarAciertos();\n                //console.log(\"El mensaje es: \" + aciertos);\n                } else {\n                    console.log(\"Fallaste\" + ultimo);\n                    setState(true);\n                    cambiarGanar(false);\n                    setTimeout(()=>{\n                        setState(false);\n                    }, 2000);\n                }\n            });\n            player.onDeath(()=>{\n                juegoKaplay.destroy(player);\n            });\n        }).catch((error)=>{\n            console.log(\"lerolerolero\");\n        });\n    }) //Fin - Onload()\n    ;\n} //return <canvas id=\"game\" style={{ width: \"100vw\", height: \"100vh\" }} />;;\n_c = Nivel1;\nvar _c;\n$RefreshReg$(_c, \"Nivel1\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/videojuego/1stLevel.tsx\n"));

/***/ })

});